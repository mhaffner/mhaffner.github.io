<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Matthew Haffner on Matthew Haffner</title>
    <link>https://mhaffner.github.io/</link>
    <description>Recent content in Matthew Haffner on Matthew Haffner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2018 Matthew Haffner</copyright>
    <lastBuildDate>Wed, 20 Apr 2016 00:00:00 -0500</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>The geography of Oklahoma State football recruiting</title>
      <link>https://mhaffner.github.io/post/osu-fb-recruiting/</link>
      <pubDate>Tue, 29 Jan 2019 13:00:00 +0000</pubDate>
      
      <guid>https://mhaffner.github.io/post/osu-fb-recruiting/</guid>
      <description>
&lt;script src=&#34;https://mhaffner.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://mhaffner.github.io/rmarkdown-libs/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://mhaffner.github.io/rmarkdown-libs/leaflet/leaflet.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://mhaffner.github.io/rmarkdown-libs/leaflet/leaflet.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://mhaffner.github.io/rmarkdown-libs/leafletfix/leafletfix.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://mhaffner.github.io/rmarkdown-libs/Proj4Leaflet/proj4-compressed.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://mhaffner.github.io/rmarkdown-libs/Proj4Leaflet/proj4leaflet.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://mhaffner.github.io/rmarkdown-libs/rstudio_leaflet/rstudio_leaflet.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://mhaffner.github.io/rmarkdown-libs/leaflet-binding/leaflet.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://mhaffner.github.io/rmarkdown-libs/leaflet-providers/leaflet-providers.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://mhaffner.github.io/rmarkdown-libs/leaflet-providers-plugin/leaflet-providers-plugin.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Anyone who listens to Gundy’s press conferences around signing day or reads
Pistol’s Firing Blog (PFB) articles on recruiting (and their corresponding
comments) knows that Oklahoma State Football’s recruiting practices are heavily
scrutinized. The writers of PFB have pointed out that Gundy’s attitude toward
recruiting has seemingly changed. Where the mantra used to be “recruiting is the
most important thing we do,” it now seems less important. With Gundy’s recent
contract extension and apparent nonchalant attitude toward the disappointing
results of the 2018 season, some have accused the head coach of becoming
complacent, particularly in the area of recruiting. Though Oklahoma State has
historically over-performed based on its recruiting class rankings, the
probability of success is lower with less talented players. As a geographer, I
naturally wonder how the locational aspects of Oklahoma State’s recruiting
practices have changed over time, and that’s what I’ll be discussing in this
piece.&lt;/p&gt;
&lt;p&gt;Rather than making a prediction beforehand about how changes have occurred,
(e.g., Gundy has become less effective in recruiting within the region, or, on
the other hand, the geographic variability has lessened over time) my approach
is more exploratory. I’m simply looking for an observable inflection point – or
consistent changes over time – that help explain &lt;em&gt;how&lt;/em&gt; Gundy’s recruiting
practices have changed with his apparent change in attitude.&lt;/p&gt;
&lt;p&gt;Before I begin, I must make a few disclaimers. First, a change in the spatial
practices of OSU recruits does not mean lower quality athletes, and my approach
does not consider recruits’ rankings. Few people would complain if OSU &lt;em&gt;only&lt;/em&gt;
signed players from Texas… if those players &lt;em&gt;all&lt;/em&gt; happened to be the top
20-ish in the state, or if OSU landed zero players within a 500 miles radius of
Stillwater but received all four and five star recruits from California,
Washington, New York, and Florida. Additionally, recruiting isn’t all on Gundy -
it’s a group effort among all coaches, and assistants can have considerable
influence in where players sign (e.g., consider Marcus Arroyo’s influence).&lt;/p&gt;
&lt;p&gt;That said, recruiting starts with the head coach, and caveats aside, geography
clearly matters. Virtually every university signs more recruits from near than
far, and Oklahoma State faces considerably different recruiting challenges than
other similarly sized schools in other parts of the country (e.g., Washington
State, Clemson, or Boise State). Conference alignment, proximity to other
universities, recruits’ distance from family and friends, the weather, culture,
and other personal factors related to location &lt;em&gt;all&lt;/em&gt; matter. My colleagues who
are Nebraska alums bemoan the Huskers’ de-emphasis on local recruiting that
began in the early 2000s – which some blame for Nebraska’s downfall – and it’s
hard to ignore the coincident struggles that Nebraska, Missouri, and Colorado
have all faced since leaving the Big XII.&lt;/p&gt;
&lt;p&gt;The spatialities of recruiting have mostly been beaten like a dead horse in the
world of sports geography, so I wanted to do something a bit unconventional by
investigating more than just the locations of where recruits come from. In this
piece I explore (1) change by year over Gundy’s entire tenure, (2) measures of
central spatial tendency like the mean and median center, (3) a measure of
dispersion (i.e. standard deviation of distance from Stillwater), and (4)
interactive visualizations through web maps. For all analyses and visualization
I use the R Project for Statistical Computing, and I retrieved data on Oklahoma
State’s recruits from Rivals.com. If you’re interested in the technical aspects
or source code, you can read about them
&lt;a href=&#34;../../post/osu-fb-recruiting-tech&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;all-recruits&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;All recruits&lt;/h1&gt;
&lt;p&gt;First, I map the hometowns (or in the case of transfers, previous
locations) of all signees recruited during Gundy’s tenure, with 2005 excluded
since the players during this year were not his recruits. &lt;strong&gt;Note: each year is a
selectable layer, so feel free to explore!&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;text-align: center;&#34;&gt;
&lt;h3 id=&#34;recruits-hometowns-2006---2019&#34;&gt;Recruits’ hometowns (2006 - 2019)&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:100%;height:650px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;calls&#34;:[{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;Stamen.Toner&#34;,null,null,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false}]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[33.233184,37.830491,32.735687,32.370699,33.42512,32.814018,32.776671,35.491608,33.655162,35.491608,29.813142,30.639285,29.154269,29.813142,27.703829,40.756095,30.773109,35.840669,30.579623,29.630032,33.00291,35.70582,32.472864,29.813142,29.813142,29.709171,33.072279,31.552011,32.777779],[-94.133243,-96.865969,-97.108066,-96.240533,-94.04769,-96.948895,-97.009389,-97.562817,-95.605194,-97.562817,-95.309789,-96.362454,-95.406577,-95.309789,-98.055296,-111.900719,-89.112944,-84.32153,-95.895889,-95.64241,-96.875,-95.50025,-84.97823,-95.309789,-95.309789,-96.486458,-83.239008,-97.1382,-96.62315],7,null,&#34;2006&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;colorweight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColorfillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[29.813142,35.390376,32.931523,31.301706,32.321937,29.374626,29.162771,30.04772,33.608922,34.143407,31.554423,32.777779,35.74925,30.1252,35.491608,32.370699,33.332852,35.491608,30.3491,39.373122,33.181157,29.578734,29.813142],[-95.309789,-97.759874,-96.615821,-94.641414,-95.302223,-94.998361,-98.175887,-95.532441,-91.207356,-101.20432,-96.871366,-96.62315,-79.685831,-91.83345,-97.562817,-96.240533,-96.726103,-97.562817,-94.17796,-111.62523,-96.497182,-97.951829,-95.309789],7,null,&#34;2007&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;,&#34;#D7B4E0&#34;],&#34;fillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[34.156627,30.841022,32.777779,37.830491,32.043193,29.38384,31.552011,37.821629,30.841022,32.735687,29.364948,35.877129,39.373122,31.249621,35.29089,35.169255,32.213061,34.98313,31.611088,33.604131,37.0373,37.830491,32.370699,33.835665,33.233184,37.830491,32.56319],[-97.179214,-97.30361,-96.62315,-96.865969,-96.350943,-94.9027,-97.1382,-94.714793,-97.30361,-97.108066,-98.909219,-97.456312,-111.62523,-96.885602,-97.81227,-89.990415,-94.783436,-85.28607,-89.171825,-96.550405,-95.61637,-96.865969,-96.240533,-118.303805,-94.133243,-96.865969,-97.14168],7,null,&#34;2008&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;,&#34;#D58B52&#34;],&#34;fillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[32.370699,33.870292,36.039147,41.130604,32.472864,35.491608,29.73356,31.70128,32.043193,36.26954,30.383369,29.837562,36.842401,35.491608,37.14645,32.13988,36.402681,36.039147,33.608922,35.192,34.099031,30.756774,33.952602,37.821629,34.748961,41.401881],[-96.240533,-117.925338,-95.868667,-85.12886,-84.97823,-97.562817,-95.23021,-90.39759,-96.350943,-95.85471,-96.008619,-95.733756,-94.854482,-97.562817,-94.463,-95.32023,-97.843091,-95.868667,-91.207356,-102.06464,-83.71817,-89.58072,-84.549933,-94.714793,-96.685325,-75.637626],7,null,&#34;2009&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;,&#34;#B545E6&#34;],&#34;fillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[32.321937,32.735687,29.813142,33.332852,30.577149,32.27795,33.786594,33.233184,32.91747,32.791087,32.321937,35.491608,30.846986,37.651974,32.370699,28.053073,31.164336,33.42512,35.491608,29.813142,33.72455,32.735687,30.577149,29.813142,29.618567,29.73356,37.566129],[-95.302223,-97.108066,-95.309789,-96.726103,-94.686315,-95.067302,-118.298662,-94.133243,-96.534737,-94.999833,-95.302223,-97.562817,-95.597029,-97.258997,-96.240533,-82.742879,-99.505894,-94.04769,-97.562817,-95.309789,-92.61571,-97.108066,-94.686315,-95.309789,-95.537722,-95.23021,-97.228475],7,null,&#34;2010&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;,&#34;#77C5D4&#34;],&#34;fillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[32.814018,33.149467,35.479157,35.390376,29.56162,33.772554,33.019843,35.95537,30.579623,33.181157,32.370699,33.019843,31.558383,32.043193,33.149467,32.576489,33.149467,26.10035,30.577149,35.187133,35.221997,29.837562,30.216516,32.800434,29.813142,37.98869],[-96.948895,-97.096016,-94.193334,-97.759874,-98.22696,-84.291723,-96.698886,-96.00888,-95.895889,-96.497182,-96.240533,-96.698886,-94.504452,-96.350943,-97.096016,-99.665323,-97.096016,-98.26307,-94.686315,-117.885359,-101.831297,-95.733756,-96.385104,-97.192762,-95.309789,-84.47772],7,null,&#34;2011&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;,&#34;#84E553&#34;],&#34;fillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[31.73452,34.1851,31.164336,35.491608,30.577149,38.637002,32.800434,33.149467,34.09038,30.216516,32.183133,32.69596,29.73356,39.764434,35.491608,33.544833,29.64609,30.442737,37.651974,32.321937,32.043193,35.187133,29.049969,35.943419],[-95.531381,-83.92518,-99.505894,-97.562817,-94.686315,-90.650024,-97.192762,-97.096016,-96.77167,-96.385104,-94.309189,-97.60225,-95.23021,-89.564045,-97.562817,-111.957563,-95.794526,-97.597055,-97.258997,-95.302223,-96.350943,-117.885359,-98.399458,-95.415011],7,null,&#34;2012&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;,&#34;#D9D2CB&#34;],&#34;fillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[32.370699,32.434599,29.813142,29.56162,30.04772,29.51801,38.64068,38.434153,32.188097,32.56319,32.259774,32.8172,32.814018,33.08447,34.112373,32.8172,32.701461,31.552011,39.373122,30.577149,35.29089,32.599427,34.1851,32.735687],[-96.240533,-99.781827,-95.309789,-98.22696,-95.532441,-98.31612,-90.44341,-96.152766,-95.882391,-97.14168,-90.091589,-97.180586,-96.948895,-94.242023,-84.30205,-97.180586,-114.657232,-97.1382,-111.62523,-94.686315,-97.81227,-96.864075,-83.92518,-97.108066],7,null,&#34;2013&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;,&#34;#D1D69B&#34;],&#34;fillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[29.813142,32.599427,32.869561,35.491608,29.561554,42.43026,33.233184,33.85455,36.006567,29.56162,26.297428,30.577149,29.709171,38.000771,29.813142,34.92487,30.204707,37.676732,36.039147,33.690667,31.73452,32.370699,30.068812,35.491608,32.188097,30.068812,29.813142,29.364948],[-95.309789,-96.864075,-99.808377,-97.562817,-95.279739,-93.253363,-94.133243,-84.21714,-95.980972,-98.22696,-97.98837,-94.686315,-96.486458,-100.664407,-95.309789,-81.02508,-90.869481,-92.043738,-95.868667,-97.34502,-95.531381,-96.240533,-89.930956,-97.562817,-95.882391,-89.930956,-95.309789,-98.909219],7,null,&#34;2014&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;colorweight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColorfillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[30.45886,29.83399,33.28589,33.181157,30.646585,29.691345,33.32865,31.992384,37.830491,32.822624,35.208566,37.830491,31.068306,32.370699,32.321937,32.56319,34.160236,32.66066,30.159092,37.830491],[-90.156595,-95.434241,-101.339267,-96.497182,-90.974252,-96.70192,-111.583739,-102.081464,-96.865969,-88.478138,-97.44451,-96.865969,-97.3047,-96.240533,-95.302223,-97.14168,-118.515472,-96.911882,-92.176237,-96.865969],7,null,&#34;2015&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;,&#34;#CA7988&#34;],&#34;fillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[36.006567,36.039147,37.954312,32.59208,32.963417,33.637061,38.988075,44.810062,35.491608,35.34496,32.573112,32.599427,30.216516,34.612417,33.28589,51.05011,36.201495,35.652832,32.599427,32.735687,32.525152,37.821629],[-95.980972,-95.868667,-97.88569,-96.756108,-96.984664,-104.377926,-95.780662,-93.653336,-97.562817,-97.604196,-93.699378,-96.864075,-96.385104,-92.493519,-101.339267,-114.08529,-86.289544,-97.478095,-96.864075,-97.108066,-93.750179,-94.714793],7,null,&#34;2016&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;,&#34;#749DCB&#34;],&#34;fillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[36.842401,32.791087,29.049969,32.931523,32.735687,31.748753,32.701461,35.943419,32.797048,32.370699,29.049969,33.149467,53.51684,38.000771,33.61011,37.573485,35.491608,36.448241,35.491608,39.373122,33.253448],[-94.854482,-94.999833,-98.399458,-96.615821,-97.108066,-83.235412,-114.657232,-95.415011,-96.561606,-96.240533,-98.399458,-97.096016,-113.3187,-100.664407,-84.287978,-122.32253,-97.562817,-95.704667,-97.562817,-111.62523,-96.43554],7,null,&#34;2017&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;,&#34;#E066C3&#34;],&#34;fillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[32.963417,36.039147,33.28589,30.577149,32.93123,30.609093,32.370699,35.491608,33.608922,32.525152,29.813142,35.29089,39.787385,34.520837,35.491608,33.149467,36.842401,32.188097,31.185738,32.976233,37.086172,33.745573,29.56162,32.93123],[-96.984664,-95.868667,-101.339267,-94.686315,-96.45971,-96.325984,-96.240533,-97.562817,-91.207356,-93.750179,-95.309789,-97.81227,-88.274137,-96.996244,-97.562817,-97.096016,-94.854482,-95.882391,-95.63856,-96.59527,-97.037967,-117.867834,-98.22696,-96.45971],7,null,&#34;2018&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;,&#34;#93E7CF&#34;],&#34;fillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[32.431364,29.837562,32.525152,39.02315,29.837562,32.416897,33.12123,35.187133,37.954312,35.491608,35.652832,33.690667,32.779306,39.373122,33.089587,34.143407,32.370699,29.56162,36.039147,36.201495],[-96.978849,-95.733756,-93.750179,-94.669467,-95.733756,-104.46539,-97.18335,-117.885359,-97.88569,-97.562817,-97.478095,-97.34502,-94.409362,-111.62523,-96.607767,-101.20432,-96.240533,-98.22696,-95.868667,-86.289544],7,null,&#34;2019&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;,&#34;#8772CF&#34;],&#34;fillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[],[2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019],{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topright&#34;}]},{&#34;method&#34;:&#34;addLegend&#34;,&#34;args&#34;:[{&#34;colors&#34;:[&#34;#78DE96&#34;,&#34;#D7B4E0&#34;,&#34;#D58B52&#34;,&#34;#B545E6&#34;,&#34;#77C5D4&#34;,&#34;#84E553&#34;,&#34;#D9D2CB&#34;,&#34;#D1D69B&#34;,&#34;#DBD958&#34;,&#34;#CA7988&#34;,&#34;#749DCB&#34;,&#34;#E066C3&#34;,&#34;#93E7CF&#34;,&#34;#8772CF&#34;],&#34;labels&#34;:[&#34;2006&#34;,&#34;2007&#34;,&#34;2008&#34;,&#34;2009&#34;,&#34;2010&#34;,&#34;2011&#34;,&#34;2012&#34;,&#34;2013&#34;,&#34;2014&#34;,&#34;2015&#34;,&#34;2016&#34;,&#34;2017&#34;,&#34;2018&#34;,&#34;2019&#34;],&#34;na_color&#34;:null,&#34;na_label&#34;:&#34;NA&#34;,&#34;opacity&#34;:1,&#34;position&#34;:&#34;bottomleft&#34;,&#34;type&#34;:&#34;factor&#34;,&#34;title&#34;:null,&#34;extra&#34;:null,&#34;layerId&#34;:null,&#34;className&#34;:&#34;info legend&#34;,&#34;group&#34;:null}]}],&#34;setView&#34;:[[38.37,-98.33],4,[]],&#34;limits&#34;:{&#34;lat&#34;:[26.10035,53.51684],&#34;lng&#34;:[-122.32253,-75.637626]}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;The majority of recruits outside of Oklahoma come from Texas (no surprise),
particularly Dallas, Houston, and the eastern half of the state. On one hand
this seems to be simply an artifact of proximity to major population centers
(i.e. Dallas and Houston), yet there is an apparent disproportionate number of
recruits from Texas (and Kansas) compared to Arkansas or Missouri. Of course,
there is not a one-to-one correspondence between population and quality of
football recruits though. Outside of Oklahoma’s bordering states, several small
clusters can be seen near Atlanta, southern Louisiana and Mississippi, and
southern California.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;central-tendency-and-dispersion&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Central tendency and dispersion&lt;/h1&gt;
&lt;p&gt;The field of spatial statistics exists in part because humans are notoriously
bad at recognizing spatial patterns. Though this web map is fun to play with and
displays general distributions, it doesn’t tell us anything definitive about
patterns over time. Rather than just eyeballing recruits locations year-to-year,
I assess trends using two measures of central tendency for spatial data – the
mean and median center – and a measure of dispersion: standard deviation of
distance from Stillwater.&lt;/p&gt;
&lt;p&gt;Mean and median centers are calculated as one would expect, except utilizing two
dimensions (latitude and longitude) instead of one. Rather than comparing these
separately, I think they are useful to view together. Medians reduce the
influence of outliers, which in this case are introduced by intermittent
recruits from California, the Northeast, and Canada. Chuba Hubbard’s hometown,
for example, lies at a whopping &lt;strong&gt;53.5 degrees north&lt;/strong&gt;.&lt;/p&gt;
&lt;div style=&#34;text-align: center;&#34;&gt;
&lt;h3 id=&#34;mean-centers-of-recruits-hometowns-2006---2019&#34;&gt;Mean centers of recruits’ hometowns (2006 - 2019)&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&#34;htmlwidget-2&#34; style=&#34;width:100%;height:500px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-2&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;calls&#34;:[{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,null,null,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false,&#34;attribution&#34;:&#34;&amp;copy; &lt;a href=\&#34;http://openstreetmap.org\&#34;&gt;OpenStreetMap&lt;\/a&gt; contributors, &lt;a href=\&#34;http://creativecommons.org/licenses/by-sa/2.0/\&#34;&gt;CC-BY-SA&lt;\/a&gt;&#34;}]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[32.4981572758621,32.4906436521739,33.8303961481481,34.4995263461538,32.3772710740741,32.6351422692308,33.2394371666667,33.0204913333333,32.6234248214286,32.9622822,35.7136810454545,34.9938436190476,33.5405291666667,34.0363926],[-95.2366166896552,-96.0615453478261,-97.0047632592593,-93.8981201153846,-96.1856751111111,-96.6551915384615,-97.0640337083333,-96.5329255833333,-94.7222086428571,-97.7440971,-96.9784737727273,-99.1936959047619,-96.9183307916667,-98.35720555],7,null,null,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#78DE96&#34;,&#34;#D7B4E0&#34;,&#34;#D58B52&#34;,&#34;#B545E6&#34;,&#34;#77C5D4&#34;,&#34;#84E553&#34;,&#34;#D9D2CB&#34;,&#34;#D1D69B&#34;,&#34;#DBD958&#34;,&#34;#CA7988&#34;,&#34;#749DCB&#34;,&#34;#E066C3&#34;,&#34;#93E7CF&#34;,&#34;#8772CF&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#78DE96&#34;,&#34;#D7B4E0&#34;,&#34;#D58B52&#34;,&#34;#B545E6&#34;,&#34;#77C5D4&#34;,&#34;#84E553&#34;,&#34;#D9D2CB&#34;,&#34;#D1D69B&#34;,&#34;#DBD958&#34;,&#34;#CA7988&#34;,&#34;#749DCB&#34;,&#34;#E066C3&#34;,&#34;#93E7CF&#34;,&#34;#8772CF&#34;],&#34;fillOpacity&#34;:1},null,null,null,null,[&#34;2006&#34;,&#34;2007&#34;,&#34;2008&#34;,&#34;2009&#34;,&#34;2010&#34;,&#34;2011&#34;,&#34;2012&#34;,&#34;2013&#34;,&#34;2014&#34;,&#34;2015&#34;,&#34;2016&#34;,&#34;2017&#34;,&#34;2018&#34;,&#34;2019&#34;],{&#34;interactive&#34;:false,&#34;permanent&#34;:true,&#34;direction&#34;:&#34;bottomleft&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]}],&#34;setView&#34;:[[33.8615156227314,-96.610920222527],7,[]],&#34;limits&#34;:{&#34;lat&#34;:[32.3772710740741,35.7136810454545],&#34;lng&#34;:[-99.1936959047619,-93.8981201153846]}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;div style=&#34;text-align: center;&#34;&gt;
&lt;h3 id=&#34;median-centers-of-recruits-hometowns-2006---2019&#34;&gt;Median centers of recruits’ hometowns (2006 - 2019)&lt;/h3&gt;
&lt;/div&gt;
&lt;p&gt;&lt;div id=&#34;htmlwidget-3&#34; style=&#34;width:100%;height:500px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-3&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;calls&#34;:[{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,null,null,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false,&#34;attribution&#34;:&#34;&amp;copy; &lt;a href=\&#34;http://openstreetmap.org\&#34;&gt;OpenStreetMap&lt;\/a&gt; contributors, &lt;a href=\&#34;http://creativecommons.org/licenses/by-sa/2.0/\&#34;&gt;CC-BY-SA&lt;\/a&gt;&#34;}]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[32.735687,32.370699,33.233184,34.423996,32.370699,32.9169305,32.748197,32.650444,32.279398,32.611925,34.9786885,33.253448,33.06285,33.4059485],[-95.895889,-96.497182,-96.865969,-95.526993,-95.309789,-96.598034,-96.578387,-96.906485,-95.700024,-96.865969,-96.8100915,-97.096016,-96.45971,-97.0810995],7,null,null,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#78DE96&#34;,&#34;#D7B4E0&#34;,&#34;#D58B52&#34;,&#34;#B545E6&#34;,&#34;#77C5D4&#34;,&#34;#84E553&#34;,&#34;#D9D2CB&#34;,&#34;#D1D69B&#34;,&#34;#DBD958&#34;,&#34;#CA7988&#34;,&#34;#749DCB&#34;,&#34;#E066C3&#34;,&#34;#93E7CF&#34;,&#34;#8772CF&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#78DE96&#34;,&#34;#D7B4E0&#34;,&#34;#D58B52&#34;,&#34;#B545E6&#34;,&#34;#77C5D4&#34;,&#34;#84E553&#34;,&#34;#D9D2CB&#34;,&#34;#D1D69B&#34;,&#34;#DBD958&#34;,&#34;#CA7988&#34;,&#34;#749DCB&#34;,&#34;#E066C3&#34;,&#34;#93E7CF&#34;,&#34;#8772CF&#34;],&#34;fillOpacity&#34;:1},null,null,null,null,[&#34;2006&#34;,&#34;2007&#34;,&#34;2008&#34;,&#34;2009&#34;,&#34;2010&#34;,&#34;2011&#34;,&#34;2012&#34;,&#34;2013&#34;,&#34;2014&#34;,&#34;2015&#34;,&#34;2016&#34;,&#34;2017&#34;,&#34;2018&#34;,&#34;2019&#34;],{&#34;interactive&#34;:false,&#34;permanent&#34;:true,&#34;direction&#34;:&#34;bottomleft&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]}],&#34;setView&#34;:[[33.8615156227314,-96.610920222527],7,[]],&#34;limits&#34;:{&#34;lat&#34;:[32.279398,34.9786885],&#34;lng&#34;:[-97.096016,-95.309789]}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
In many cases –
especially when underlying distributions are not assessed first – the median is
a more appropriate measure, yet both measures yield similar results in this case. The
median center does reduce the amount of east-west
variability, however, and makes 2009 and 2016 stand out from the other years. Aside from
these years, the centers appear to remain remarkably stable, including recent
years (2017 - 2019), with no apparent systematic change over time.&lt;/p&gt;
&lt;p&gt;It’s hard to ignore that many of the 2009 recruits played for the historic 2011
team several years later, yet the results two years following 2016 (i.e. 2018)
were quite different from 2011. Being able to tie individual recruiting classes
directly to performance in future seasons would be a luxury, but unfortunately I
don’t think it works way. Unlike basketball in which one superb recruiting class
can drastically alter a team’s trajectory, football is different. Success is
made out of pattern of high caliber recruiting over long periods of time.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;dispersion&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Dispersion&lt;/h1&gt;
&lt;p&gt;While informative, these measures do not consider dispersion or within-year
variability. For example, if Oklahoma State received all of its recruits from
Dallas during one year and zero recruits from Dallas during another year, the
two years &lt;em&gt;could&lt;/em&gt; still have the exact same mean or median center (that said,
2009 and 2016 have similarly dispersed patterns compared to other years). Next,
I create a plot showing the distance and direction of each recruit’s hometown to
Stillwater by year.&lt;/p&gt;
&lt;div style=&#34;text-align: center;&#34;&gt;
&lt;h3 id=&#34;distance-and-direction-of-recruits-hometowns-to-stillwater&#34;&gt;Distance and direction of recruits’ hometowns to Stillwater&lt;/h3&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;https://mhaffner.github.io/post/osu-fb-recruiting_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This plot displays some intriguing patterns. In each of the years 2007, 2010,
and 2011 Oklahoma State signed &lt;em&gt;only one player&lt;/em&gt; from north of Stillwater (2015
appears this way too, but actually two signees came from El Dorado, KS),
emphasizing the importance of Texas – and other parts of the southern US – to
its recruiting efforts. Next, I create a plot comparing mean, median, and
standard deviation of distance from Stillwater.&lt;/p&gt;
&lt;div style=&#34;text-align: center;&#34;&gt;
&lt;h3 id=&#34;mean-median-and-standard-deviation-of-recruits-distance-from-stillwater&#34;&gt;Mean, median, and standard deviation of recruits’ distance from Stillwater&lt;/h3&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;https://gitlab.com/mhaffner/okstate-fb-recruiting/raw/master/img/summary.png&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Again, no systematic trends appear, although the median distance from Stillwater
is less in 2016 - 2019 than any previous years. That said, standard deviation is
not less during these years; in fact, 2017 has the greatest standard deviation
in the dataset (largely thanks to Chuba Hubbard).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;So what does all of this mean? I think the most straightforward takeaway is that
the geography of Oklahoma State’s recruiting practices has remained fairly
stable over Gundy’s tenure. If Gundy has become complacent, it’s not appearing
in locational distributions of recruits. That said, recruiting efforts could
certainly be improved, and there is one glaringly relevant takeaway to the
future of Oklahoma State football: the array of locations from which players
come is &lt;em&gt;good enough&lt;/em&gt; in that there are plenty of sufficiently talented players
in those places. The challenge is recruiting &lt;em&gt;better&lt;/em&gt; players from those
locations. As mentioned earlier, this assessment did not consider recruits’ high
school (or JUCO) ratings.&lt;/p&gt;
&lt;p&gt;While it is a bit disappointing to not find something juicier, there are several
logical ways this small project could be extended. First and foremost, the
effect of distance on the &lt;em&gt;quality&lt;/em&gt; of recruits may be revealing. For example,
are signees from farther away rated lower than those close to Stillwater? If so,
this may give &lt;em&gt;some&lt;/em&gt; credence to the idea that “it’s difficult to get players to
come to Stillwater” or, more precisely, that “Oklahoma State is less successful
is getting good players from far away to come to Stillwater.” Of course, this
assumes current conditions with the present efforts and strategies put into
recruiting. On the flip side, if results were insignificant (i.e. distance does
not have an effect on the quality of recruits), perhaps Oklahoma State could be
more aggressive – and confident – in offering scholarships to higher rated
recruits from farther away. These effects could be assessed with a simple
correlation analysis.&lt;/p&gt;
&lt;p&gt;What could be even more informative, however, is a comparative study with
another university – either one in the Big XII, similarly positioned
regionally&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;, or a comparatively sized university in another part of the
country. With the &lt;a href=&#34;https://pistolsfiringblog.com/reader-thoughts-what-does-an-oklahoma-state-clemson-comp-look-like/&#34;&gt;recent comparisons of Oklahoma State to
Clemson&lt;/a&gt;,
a side-by-side comparison of these two universities’ geographies of recruiting
may make for a fascinating study.&lt;/p&gt;
&lt;p&gt;If you catch something that I didn’t see in the data or if you have another idea
for a follow-up study, feel free to point it out in the comments!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Footnotes&lt;/h1&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;I heard there is one in Cleveland County but I can’t remember its name.&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>The geography of Oklahoma State football recruiting: Technical approach</title>
      <link>https://mhaffner.github.io/post/osu-fb-recruiting-tech/</link>
      <pubDate>Tue, 29 Jan 2019 13:00:00 +0000</pubDate>
      
      <guid>https://mhaffner.github.io/post/osu-fb-recruiting-tech/</guid>
      <description>
&lt;script src=&#34;https://mhaffner.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://mhaffner.github.io/rmarkdown-libs/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://mhaffner.github.io/rmarkdown-libs/leaflet/leaflet.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://mhaffner.github.io/rmarkdown-libs/leaflet/leaflet.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://mhaffner.github.io/rmarkdown-libs/leafletfix/leafletfix.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://mhaffner.github.io/rmarkdown-libs/Proj4Leaflet/proj4-compressed.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://mhaffner.github.io/rmarkdown-libs/Proj4Leaflet/proj4leaflet.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://mhaffner.github.io/rmarkdown-libs/rstudio_leaflet/rstudio_leaflet.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://mhaffner.github.io/rmarkdown-libs/leaflet-binding/leaflet.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://mhaffner.github.io/rmarkdown-libs/leaflet-providers/leaflet-providers.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://mhaffner.github.io/rmarkdown-libs/leaflet-providers-plugin/leaflet-providers-plugin.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;In this piece I’m going to describe the technical aspects behind a recent
project where I wrote about the &lt;a href=&#34;../../post/osu-fb-recruiting/&#34;&gt;geography of Oklahoma State football’s
recruiting practices&lt;/a&gt;. This project involves extracting web content, processing
text, geocoding, web mapping, and some basic exploratory spatial data analysis.
I met a number of unexpected challenges along the way and I hope this will serve
to help others facing similar issues. These scripts are also available in full
in a &lt;a href=&#34;https://gitlab.com/mhaffner/okstate-fb-recruiting&#34;&gt;repository on GitLab&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;extracting-and-processing-text-from-the-web&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Extracting and processing text from the web&lt;/h1&gt;
&lt;p&gt;Initially I was planning on just using the rosters provided on Oklahoma State’s
website, but this proved to be problematic for several reasons: (1) each year’s
roster lists every player on the team and does not stratify by signing class;
(2) Oklahoma State’s online rosters are only available from 2015 - 2019; (3) and
they use a weird state abbreviation system that doesn’t work well with
geocoders. Kyle Porter from Pistol’s Firing Blog suggested I try Rivals or 247
Sports, and Rivals had exactly what I was looking for: a list of recruits for
each year dating back to 2002.&lt;/p&gt;
&lt;p&gt;In the snippet below I load libraries, set my working directory and extract some
raw data from my GitLab page. These are state (for the U.S.) and province (for
Canada) abbreviations that are matched to abbreviations on Rivals and used to
improve geocoding results.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;  library(httr)
  library(rjson)
  library(magrittr)
  library(ggmap)
  library(purrr)

  # set working directory
  setwd(&amp;quot;/home/matt/git-repos/okstate-fb-recruiting/data/&amp;quot;)

  # get state abbreviations from the web and convert to data frame
  states.df &amp;lt;- data.frame(read.csv(&amp;quot;https://gitlab.com/mhaffner/useful-files/raw/master/state-abbreviations.csv&amp;quot;,
                                   strip.white = TRUE,
                                   stringsAsFactors = FALSE))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Even though Rivals contains data on Oklahoma State’s rosters back to 2002, I
only use 2006 - 2019 which covers Gundy’s tenure as head coach. His first year
was 2005, but his first recruiting class would have been 2006. Conveniently, the
early signing period for 2019 has already occurred, and with OSU’s 20
commitments (19 signees and 1 verbal commitment) not much will change on
February 6, National Signing Day.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;years &amp;lt;- c(2006:2019)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The next part is a loop broken into multiple chunks for readability. In here
there is some text parsing/processing, geocoding, and aggregation. First, I loop
through every year in the previously declared variable, &lt;code&gt;years&lt;/code&gt;, which creates a
link for each signing class with the &lt;code&gt;page&lt;/code&gt; variable.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;for (year in years) {
  page &amp;lt;- paste0(&amp;quot;https://oklahomastate.rivals.com/commitments/Football/&amp;quot;, year)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What follows is how I turned the web table from rivals into a data frame.
Typically, using a library like &lt;code&gt;rvest&lt;/code&gt; is ideal since it can simplify much of
this process using CSS selectors. Unfortunately though, the tables on Rivals are
generated using JavaScript, not created with pure HTML. This is problematic
since the page takes some time to load, and the JavaScript content is
inaccessible with &lt;code&gt;rvest&lt;/code&gt; in such circumstances.&lt;/p&gt;
&lt;p&gt;There are ways of getting around this that are a bit more involved, but they
require more work up-front (e.g., R packages &lt;code&gt;splashr&lt;/code&gt; and &lt;code&gt;RSelenium&lt;/code&gt;). For
more long-term projects, these would certainly be more appropriate, but for my
sake, simply extracting all text content from the page and parsing it on the
back end is sufficient since Rivals’ content is predictable and the tables don’t
vary in structure from year to year. I’m not sure why a simple &lt;code&gt;GET&lt;/code&gt; request
with the &lt;code&gt;httr&lt;/code&gt; package works for extracting the JavaScript-created tables but
&lt;code&gt;rvest&lt;/code&gt; functions do not:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;  ### create data frame
  # get the webpage content
  players.df &amp;lt;- GET(page) %&amp;gt;%
    # convert content to text
    content(., &amp;quot;text&amp;quot;) %&amp;gt;%
    # split by the json&amp;#39;s front end
    strsplit(., &amp;quot;rv-commitments prospects=&amp;quot;) %&amp;gt;% extract2(1) %&amp;gt;% extract2(2) %&amp;gt;%
    # split by the json&amp;#39;s back end
    strsplit(., &amp;quot;&amp;lt;/rv-commitments&amp;quot;) %&amp;gt;% extract2(1) %&amp;gt;% extract2(1) %&amp;gt;%
    # do a little more parsing
    strsplit(., paste0(&amp;quot;sport=&amp;#39;football&amp;#39; team-ranking=&amp;#39;teamRanking&amp;#39; year=&amp;#39;&amp;quot;, year,&amp;quot;&amp;#39;&amp;gt;&amp;quot;)) %&amp;gt;%
    # parse by character position; basically strip out &amp;gt; and &amp;lt;
    substr(., 2, nchar(.)-2) %&amp;gt;%
    # convert from json
    fromJSON() %&amp;gt;%
    # convert NULLs to NA, list items to data frame columns (character and numeric) and create tibble
    map_df(., flatten)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here, I make extensive use of the pipe function, &lt;code&gt;%&amp;gt;%&lt;/code&gt;, which has become a
staple of mine lately. While it can be a bit confusing at first, it ultimately
makes for much more transparent workflow and cleaner code. In the code above, a
period is frequently used as an argument (e.g., &lt;code&gt;content(., &#34;text&#34;) %&amp;gt;%&lt;/code&gt;), which
simply means “the thing (or object) from the previous pipe.” What was puzzling
to me initially is that with functions where only one argument is required, the
period is not needed, so it is usually omitted (e.g. &lt;code&gt;some_func() %&amp;gt;%&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;The pipe also requires some alternative function use, like &lt;code&gt;extract2()&lt;/code&gt; used in
place of indexing, which does not work with pipes. Essentially &lt;code&gt;%&amp;gt;% extract2(1) %&amp;gt;% extract(2)&lt;/code&gt; means &lt;code&gt;my_obj[1][2]&lt;/code&gt;. Then, the use of &lt;code&gt;strsplit&lt;/code&gt; to get what I
needed simply required a bit of trial and error.&lt;/p&gt;
&lt;p&gt;Next, I geocoded (i.e. attached geometry to locations based on text) the
players’ hometowns so that they could be mapped. I was originally using the
&lt;code&gt;nominatim&lt;/code&gt; package for this, but it was inappropriate on a few different
levels: (1) it is a bit overkill for the simple purpose of getting cities’
latitude/longitude locations; the &lt;code&gt;nominatim&lt;/code&gt; package relies on OpenStreetMap
which contains hundreds of different feature types. (2) &lt;code&gt;nominatim&lt;/code&gt; requires an
API key and has query limits. While I was not close to hitting the limit in this
project, I very well could hit it in similar projects in the future. (3) While
all geocoders occasionally produce erroneous results, &lt;code&gt;nominatim&lt;/code&gt; produced more
errors for me. Given that I only need to geocode city locations and that
precision is not a major concern, &lt;code&gt;ggmap&lt;/code&gt; is a better choice.&lt;/p&gt;
&lt;p&gt;Even with &lt;code&gt;ggmap&lt;/code&gt;, however, it is better to use full state or province names
rather than state abbreviations. Canadian provinces and their abbreviations were
required in addition to U.S. states, since Oklahoma State attracts a wealth of
players from the Great White North. These are matched and assigned using the
&lt;code&gt;match&lt;/code&gt; function.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;  # match results based on table indices
  players.df$state &amp;lt;- states.df$state[match(players.df$state_abbreviation, states.df$abbrev)]

  # create a field of city, state
  players.df$home.town &amp;lt;- paste0(players.df$city, &amp;quot;, &amp;quot;, players.df$state)

  # use ggmap geocoder to get geometry
  home.town.loc &amp;lt;- geocode(players.df$home.town, output = &amp;quot;latlon&amp;quot;, source = &amp;quot;dsk&amp;quot;)

  players.df$lon &amp;lt;- home.town.loc$lon
  players.df$lat &amp;lt;- home.town.loc$lat&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I then create a data frame out of the first year’s data and append the rows of
each year’s recruits to the previous. This does not feel very efficient or
R-like, but it gets the job done. Note that the apparent mismatched bracket is
paired at the top of the &lt;code&gt;for&lt;/code&gt; loop.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;  # append dataframe rows
  if (year == min(years)){
    agg.df &amp;lt;- players.df
  } else {
    agg.df &amp;lt;- rbind(agg.df, players.df)
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, I write the results to a file since the geocoding takes a while and
this only needs to be done once.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# save the .csv to a file
write.csv(agg.df, &amp;quot;osu-recruits.csv&amp;quot;, row.names = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;mapping-all-recruits&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Mapping all recruits&lt;/h1&gt;
&lt;p&gt;For this part, some different libraries are needed. In my repository this is
actually the start of a separate script, but for the sake of brevity I omit
redundant lines (e.g., &lt;code&gt;setwd&lt;/code&gt;). The library &lt;code&gt;randomcoloR&lt;/code&gt; is used first to
assign colors to points. Selecting 14 distinct yet visually appealing colors is
surprisingly difficult, but the &lt;code&gt;randomcoloR&lt;/code&gt; library does this quite well. As
the name implies, it generates colors randomly, so I use &lt;code&gt;set.seed(3)&lt;/code&gt; to “fix”
the scheme to what I deemed desirable. I tested other schemes with &lt;code&gt;set.seed(1)&lt;/code&gt;
and &lt;code&gt;set.seed(2)&lt;/code&gt;, but didn’t like these as much. Fixing the color scheme is
important since I want to use the same color scheme on every map which is each
in a different scripts. I simply use &lt;code&gt;set.seed(3)&lt;/code&gt; prior to the line with the
&lt;code&gt;distinctColorPalette&lt;/code&gt; function, and this replicates my desired scheme. This
only needs to be done once, and I save the result as an R dataset to avoid
having to &lt;code&gt;set.seed(3)&lt;/code&gt; in each other script.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(randomcoloR)

set.seed(3)
color.pal &amp;lt;- sample(distinctColorPalette(length(years)))

# save colors for future use
saveRDS(color.pal, file=&amp;quot;colors.Rda&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The R library &lt;code&gt;leaflet&lt;/code&gt; is used to create the web maps. First, I load the data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# load data
library(leaflet)
recruits &amp;lt;- data.frame(read.csv(&amp;quot;osu-recruits.csv&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, I create a variable containing the years of the study. Rather than do this
manually with &lt;code&gt;years &amp;lt;- 2006:2019&lt;/code&gt;, I simply extract the unique years from the
necessary column in the &lt;code&gt;recruits&lt;/code&gt; data frame.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# get unique years as a variable
years &amp;lt;- unique(recruits$year)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To create the web maps I use the &lt;code&gt;leaflet&lt;/code&gt; package which has great documentation
and is pleasantly intuitive. It blows my mind how much easier it is to create
web maps in R rather using pure html and JavaScript. Plus, using R makes a
wealth of statistical and spatial analysis capabilities available directly, and
frameworks like Shiny and RMarkdown make creating production quality web maps
totally viable. Since discovering this combination of packages, my mind has been
reeling with potential applications.&lt;/p&gt;
&lt;p&gt;Creating web maps is another place where using pipes makes sense, since each
line adds something new to the map – sort of like creating a layer in a desktop
GIS – and avoids having to repeatedly declare a &lt;code&gt;map&lt;/code&gt; variable. The code below
creates a simple base map with the view fixed in a location that makes all data
points visible. I use Stamen’s Toner tiles (as opposed to the default Open
Street Map tiles) which use only black to avoid conflicts with the 14 different
colors of the points.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# load color scheme
color.pal &amp;lt;- readRDS(&amp;quot;colors.Rda&amp;quot;)

# create color palette with domain
colors &amp;lt;- colorFactor((color.pal),
                      domain = c(min(years):max(years)))

map &amp;lt;- leaflet(width = &amp;quot;100%&amp;quot;, height = &amp;quot;650px&amp;quot;) %&amp;gt;%
  addProviderTiles(providers$Stamen.Toner) %&amp;gt;%
  setView(lng = -98.33, lat = 38.37, zoom = 4)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Following this, I use a loop (solution found on Stack Overflow) to
create a separate layer for each year. This is only necessary since I
am using &lt;code&gt;overlayGroups&lt;/code&gt; to create selectable layers. I make some
modifications to the default styles like lowering the opacity to give
a sense of density. Using an even lower opacity (e.g., &lt;code&gt;0.2&lt;/code&gt;) does
this better but makes distinguishing colors more difficult. If the
point of this project was to show hotbeds of recruits over Gundy’s
entire tenure (i.e. not from year to year), something like kernel
density estimation would certainly be a better visualization tool.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;for (year in years) {
  data &amp;lt;- recruits[recruits$year == year,]
  map &amp;lt;- map %&amp;gt;%
    addCircleMarkers(data = data,
                     lng = ~lon,
                     lat = ~lat,
                     radius = 7,
                     stroke = FALSE,
                     color = ~colors(year),
                     fillOpacity = 0.8,
                     group = as.character(year))
  }&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Even with this code above, the map is still not displayed. This final
snippet displays the map, adds layer control, and adds a legend.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;map %&amp;gt;%
  addLayersControl(
    overlayGroups = years,
    options = layersControlOptions(collapsed = TRUE)) %&amp;gt;%
    addLegend(&amp;quot;bottomleft&amp;quot;, pal = colors, values = years, opacity = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;div style=&#34;text-align: center;&#34;&gt;
&lt;h3 id=&#34;recruits-hometowns-2006---2019&#34;&gt;Recruits’ hometowns (2006 - 2019)&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:100%;height:650px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;calls&#34;:[{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;Stamen.Toner&#34;,null,null,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;detectRetina&#34;:false}]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[33.233184,37.830491,32.735687,32.370699,33.42512,32.814018,32.776671,35.491608,33.655162,35.491608,29.813142,30.639285,29.154269,29.813142,27.703829,40.756095,30.773109,35.840669,30.579623,29.630032,33.00291,35.70582,32.472864,29.813142,29.813142,29.709171,33.072279,31.552011,32.777779],[-94.133243,-96.865969,-97.108066,-96.240533,-94.04769,-96.948895,-97.009389,-97.562817,-95.605194,-97.562817,-95.309789,-96.362454,-95.406577,-95.309789,-98.055296,-111.900719,-89.112944,-84.32153,-95.895889,-95.64241,-96.875,-95.50025,-84.97823,-95.309789,-95.309789,-96.486458,-83.239008,-97.1382,-96.62315],7,null,&#34;2006&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;,&#34;#D0E29F&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColorfillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[29.813142,35.390376,32.931523,31.301706,32.321937,29.374626,29.162771,30.04772,33.608922,34.143407,31.554423,32.777779,35.74925,30.1252,35.491608,32.370699,33.332852,35.491608,30.3491,39.373122,33.181157,29.578734,29.813142],[-95.309789,-97.759874,-96.615821,-94.641414,-95.302223,-94.998361,-98.175887,-95.532441,-91.207356,-101.20432,-96.871366,-96.62315,-79.685831,-91.83345,-97.562817,-96.240533,-96.726103,-97.562817,-94.17796,-111.62523,-96.497182,-97.951829,-95.309789],7,null,&#34;2007&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;,&#34;#E5B256&#34;],&#34;fillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[34.156627,30.841022,32.777779,37.830491,32.043193,29.38384,31.552011,37.821629,30.841022,32.735687,29.364948,35.877129,39.373122,31.249621,35.29089,35.169255,32.213061,34.98313,31.611088,33.604131,37.0373,37.830491,32.370699,33.835665,33.233184,37.830491,32.56319],[-97.179214,-97.30361,-96.62315,-96.865969,-96.350943,-94.9027,-97.1382,-94.714793,-97.30361,-97.108066,-98.909219,-97.456312,-111.62523,-96.885602,-97.81227,-89.990415,-94.783436,-85.28607,-89.171825,-96.550405,-95.61637,-96.865969,-96.240533,-118.303805,-94.133243,-96.865969,-97.14168],7,null,&#34;2008&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;,&#34;#A4997C&#34;],&#34;fillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[32.370699,33.870292,36.039147,41.130604,32.472864,35.491608,29.73356,31.70128,32.043193,36.26954,30.383369,29.837562,36.842401,35.491608,37.14645,32.13988,36.402681,36.039147,33.608922,35.192,34.099031,30.756774,33.952602,37.821629,34.748961,41.401881],[-96.240533,-117.925338,-95.868667,-85.12886,-84.97823,-97.562817,-95.23021,-90.39759,-96.350943,-95.85471,-96.008619,-95.733756,-94.854482,-97.562817,-94.463,-95.32023,-97.843091,-95.868667,-91.207356,-102.06464,-83.71817,-89.58072,-84.549933,-94.714793,-96.685325,-75.637626],7,null,&#34;2009&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;,&#34;#DC68B4&#34;],&#34;fillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[32.321937,32.735687,29.813142,33.332852,30.577149,32.27795,33.786594,33.233184,32.91747,32.791087,32.321937,35.491608,30.846986,37.651974,32.370699,28.053073,31.164336,33.42512,35.491608,29.813142,33.72455,32.735687,30.577149,29.813142,29.618567,29.73356,37.566129],[-95.302223,-97.108066,-95.309789,-96.726103,-94.686315,-95.067302,-118.298662,-94.133243,-96.534737,-94.999833,-95.302223,-97.562817,-95.597029,-97.258997,-96.240533,-82.742879,-99.505894,-94.04769,-97.562817,-95.309789,-92.61571,-97.108066,-94.686315,-95.309789,-95.537722,-95.23021,-97.228475],7,null,&#34;2010&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;,&#34;#9A73DC&#34;],&#34;fillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[32.814018,33.149467,35.479157,35.390376,29.56162,33.772554,33.019843,35.95537,30.579623,33.181157,32.370699,33.019843,31.558383,32.043193,33.149467,32.576489,33.149467,26.10035,30.577149,35.187133,35.221997,29.837562,30.216516,32.800434,29.813142,37.98869],[-96.948895,-97.096016,-94.193334,-97.759874,-98.22696,-84.291723,-96.698886,-96.00888,-95.895889,-96.497182,-96.240533,-96.698886,-94.504452,-96.350943,-97.096016,-99.665323,-97.096016,-98.26307,-94.686315,-117.885359,-101.831297,-95.733756,-96.385104,-97.192762,-95.309789,-84.47772],7,null,&#34;2011&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;,&#34;#B644E3&#34;],&#34;fillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[31.73452,34.1851,31.164336,35.491608,30.577149,38.637002,32.800434,33.149467,34.09038,30.216516,32.183133,32.69596,29.73356,39.764434,35.491608,33.544833,29.64609,30.442737,37.651974,32.321937,32.043193,35.187133,29.049969,35.943419],[-95.531381,-83.92518,-99.505894,-97.562817,-94.686315,-90.650024,-97.192762,-97.096016,-96.77167,-96.385104,-94.309189,-97.60225,-95.23021,-89.564045,-97.562817,-111.957563,-95.794526,-97.597055,-97.258997,-95.302223,-96.350943,-117.885359,-98.399458,-95.415011],7,null,&#34;2012&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;,&#34;#DF7963&#34;],&#34;fillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[32.370699,32.434599,29.813142,29.56162,30.04772,29.51801,38.64068,38.434153,32.188097,32.56319,32.259774,32.8172,32.814018,33.08447,34.112373,32.8172,32.701461,31.552011,39.373122,30.577149,35.29089,32.599427,34.1851,32.735687],[-96.240533,-99.781827,-95.309789,-98.22696,-95.532441,-98.31612,-90.44341,-96.152766,-95.882391,-97.14168,-90.091589,-97.180586,-96.948895,-94.242023,-84.30205,-97.180586,-114.657232,-97.1382,-111.62523,-94.686315,-97.81227,-96.864075,-83.92518,-97.108066],7,null,&#34;2013&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;,&#34;#71E46B&#34;],&#34;fillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[29.813142,32.599427,32.869561,35.491608,29.561554,42.43026,33.233184,33.85455,36.006567,29.56162,26.297428,30.577149,29.709171,38.000771,29.813142,34.92487,30.204707,37.676732,36.039147,33.690667,31.73452,32.370699,30.068812,35.491608,32.188097,30.068812,29.813142,29.364948],[-95.309789,-96.864075,-99.808377,-97.562817,-95.279739,-93.253363,-94.133243,-84.21714,-95.980972,-98.22696,-97.98837,-94.686315,-96.486458,-100.664407,-95.309789,-81.02508,-90.869481,-92.043738,-95.868667,-97.34502,-95.531381,-96.240533,-89.930956,-97.562817,-95.882391,-89.930956,-95.309789,-98.909219],7,null,&#34;2014&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;colorweight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColorfillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[30.45886,29.83399,33.28589,33.181157,30.646585,29.691345,33.32865,31.992384,37.830491,32.822624,35.208566,37.830491,31.068306,32.370699,32.321937,32.56319,34.160236,32.66066,30.159092,37.830491],[-90.156595,-95.434241,-101.339267,-96.497182,-90.974252,-96.70192,-111.583739,-102.081464,-96.865969,-88.478138,-97.44451,-96.865969,-97.3047,-96.240533,-95.302223,-97.14168,-118.515472,-96.911882,-92.176237,-96.865969],7,null,&#34;2015&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;,&#34;#D3DEDC&#34;],&#34;fillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[36.006567,36.039147,37.954312,32.59208,32.963417,33.637061,38.988075,44.810062,35.491608,35.34496,32.573112,32.599427,30.216516,34.612417,33.28589,51.05011,36.201495,35.652832,32.599427,32.735687,32.525152,37.821629],[-95.980972,-95.868667,-97.88569,-96.756108,-96.984664,-104.377926,-95.780662,-93.653336,-97.562817,-97.604196,-93.699378,-96.864075,-96.385104,-92.493519,-101.339267,-114.08529,-86.289544,-97.478095,-96.864075,-97.108066,-93.750179,-94.714793],7,null,&#34;2016&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;,&#34;#74E5BE&#34;],&#34;fillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[36.842401,32.791087,29.049969,32.931523,32.735687,31.748753,32.701461,35.943419,32.797048,32.370699,29.049969,33.149467,53.51684,38.000771,33.61011,37.573485,35.491608,36.448241,35.491608,39.373122,33.253448],[-94.854482,-94.999833,-98.399458,-96.615821,-97.108066,-83.235412,-114.657232,-95.415011,-96.561606,-96.240533,-98.399458,-97.096016,-113.3187,-100.664407,-84.287978,-122.32253,-97.562817,-95.704667,-97.562817,-111.62523,-96.43554],7,null,&#34;2017&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;,&#34;#75CADB&#34;],&#34;fillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[32.963417,36.039147,33.28589,30.577149,32.93123,30.609093,32.370699,35.491608,33.608922,32.525152,29.813142,35.29089,39.787385,34.520837,35.491608,33.149467,36.842401,32.188097,31.185738,32.976233,37.086172,33.745573,29.56162,32.93123],[-96.984664,-95.868667,-101.339267,-94.686315,-96.45971,-96.325984,-96.240533,-97.562817,-91.207356,-93.750179,-95.309789,-97.81227,-88.274137,-96.996244,-97.562817,-97.096016,-94.854482,-95.882391,-95.63856,-96.59527,-97.037967,-117.867834,-98.22696,-96.45971],7,null,&#34;2018&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;,&#34;#D0E552&#34;],&#34;fillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[32.431364,29.837562,32.525152,39.02315,29.837562,32.416897,33.12123,35.187133,37.954312,35.491608,35.652832,33.690667,32.779306,39.373122,33.089587,34.143407,32.370699,29.56162,36.039147,36.201495],[-96.978849,-95.733756,-93.750179,-94.669467,-95.733756,-104.46539,-97.18335,-117.885359,-97.88569,-97.562817,-97.478095,-97.34502,-94.409362,-111.62523,-96.607767,-101.20432,-96.240533,-98.22696,-95.868667,-86.289544],7,null,&#34;2019&#34;,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;,&#34;#7F99D9&#34;],&#34;fillOpacity&#34;:0.8},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[],[2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019],{&#34;collapsed&#34;:true,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topright&#34;}]},{&#34;method&#34;:&#34;addLegend&#34;,&#34;args&#34;:[{&#34;colors&#34;:[&#34;#D0E29F&#34;,&#34;#E5B256&#34;,&#34;#A4997C&#34;,&#34;#DC68B4&#34;,&#34;#9A73DC&#34;,&#34;#B644E3&#34;,&#34;#DF7963&#34;,&#34;#71E46B&#34;,&#34;#DBAACD&#34;,&#34;#D3DEDC&#34;,&#34;#74E5BE&#34;,&#34;#75CADB&#34;,&#34;#D0E552&#34;,&#34;#7F99D9&#34;],&#34;labels&#34;:[&#34;2006&#34;,&#34;2007&#34;,&#34;2008&#34;,&#34;2009&#34;,&#34;2010&#34;,&#34;2011&#34;,&#34;2012&#34;,&#34;2013&#34;,&#34;2014&#34;,&#34;2015&#34;,&#34;2016&#34;,&#34;2017&#34;,&#34;2018&#34;,&#34;2019&#34;],&#34;na_color&#34;:null,&#34;na_label&#34;:&#34;NA&#34;,&#34;opacity&#34;:1,&#34;position&#34;:&#34;bottomleft&#34;,&#34;type&#34;:&#34;factor&#34;,&#34;title&#34;:null,&#34;extra&#34;:null,&#34;layerId&#34;:null,&#34;className&#34;:&#34;info legend&#34;,&#34;group&#34;:null}]}],&#34;setView&#34;:[[38.37,-98.33],4,[]],&#34;limits&#34;:{&#34;lat&#34;:[26.10035,53.51684],&#34;lng&#34;:[-122.32253,-75.637626]}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;Originally I used popup markers so that you could click on a point and
see the player’s name and hometown, but since multiple players can
come from the same town, there are many overlapping points. From what
I can see, Leaflet has no effective way of handling these, and you can
only click on the top point. I was a bit confused before I realized
this - clicking on Tulsa, I did see Justice Hill, for instance. To
avoid confusion I just omitted this feature.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;measures-of-central-tendency-and-dispersion&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Measures of central tendency and dispersion&lt;/h1&gt;
&lt;p&gt;Though this web map is fun to play around with, it does not tell us
anything definitive about patterns over time. Humans are notoriously
bad at detecting spatial patterns visually, which works out well for
me as it provides job security. Due this, I use several metrics: mean
center, median center, and standard deviation.&lt;/p&gt;
&lt;div id=&#34;mean-centers&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Mean centers&lt;/h2&gt;
&lt;p&gt;The mean center is a straightforward measure that simply averages the
longitude and latitude values (separately, of course). Using a
geographic coordinate system always necessitates caution, since
distance calculations often don’t work as intended – a degree of
latitude and a degree of longitude are unequal except at the equator.
In this case, however, the latitude and longitude means are calculated
separately, so this conniption does not pose any problems.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;  # get the mean center for each year
  mean.centers &amp;lt;- data.frame(year = years, lon = NA, lat = NA)

  for (year in years) {
    mean.centers$lon[mean.centers$year == year] &amp;lt;- mean(recruits$lon[recruits$year == year])
    mean.centers$lat[mean.centers$year == year] &amp;lt;- mean(recruits$lat[recruits$year == year])
  }&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This time I set the view programmatically based on the data’s mean
center. Yet, this cuts off view of the year 2016 which lies farther
north than any other point, so I add &lt;code&gt;0.4&lt;/code&gt; to the starting latitude
view. I use the same color scheme as before, but I leave the opacity
alone since there are no overlapping points.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;  # create map of mean centers
  leaflet(width = &amp;quot;100%&amp;quot;, height = &amp;quot;500px&amp;quot;) %&amp;gt;%
    addTiles() %&amp;gt;%
    setView(lng = mean(mean.centers$lon), lat = mean(mean.centers$lat)+0.4, zoom = 7) %&amp;gt;%
    addCircleMarkers(data = mean.centers,
                     lng = ~lon,
                     lat = ~lat,
                     label = ~as.character(year),
                     labelOptions = labelOptions(noHide = TRUE,
                                                 direction = &amp;quot;bottomleft&amp;quot;),
                     radius = 7,
                     stroke = FALSE,
                     color = ~colors(year),
                     fillOpacity = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;div style=&#34;text-align: center;&#34;&gt;
&lt;h3 id=&#34;mean-centers-of-recruits-hometowns-2006---2019&#34;&gt;Mean centers of recruits’ hometowns (2006 - 2019)&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&#34;htmlwidget-2&#34; style=&#34;width:100%;height:500px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-2&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;calls&#34;:[{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,null,null,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false,&#34;attribution&#34;:&#34;&amp;copy; &lt;a href=\&#34;http://openstreetmap.org\&#34;&gt;OpenStreetMap&lt;\/a&gt; contributors, &lt;a href=\&#34;http://creativecommons.org/licenses/by-sa/2.0/\&#34;&gt;CC-BY-SA&lt;\/a&gt;&#34;}]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[32.4981572758621,32.4906436521739,33.8303961481481,34.4995263461538,32.3772710740741,32.6351422692308,33.2394371666667,33.0204913333333,32.6234248214286,32.9622822,35.7136810454545,34.9938436190476,33.5405291666667,34.0363926],[-95.2366166896552,-96.0615453478261,-97.0047632592593,-93.8981201153846,-96.1856751111111,-96.6551915384615,-97.0640337083333,-96.5329255833333,-94.7222086428571,-97.7440971,-96.9784737727273,-99.1936959047619,-96.9183307916667,-98.35720555],7,null,null,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#D0E29F&#34;,&#34;#E5B256&#34;,&#34;#A4997C&#34;,&#34;#DC68B4&#34;,&#34;#9A73DC&#34;,&#34;#B644E3&#34;,&#34;#DF7963&#34;,&#34;#71E46B&#34;,&#34;#DBAACD&#34;,&#34;#D3DEDC&#34;,&#34;#74E5BE&#34;,&#34;#75CADB&#34;,&#34;#D0E552&#34;,&#34;#7F99D9&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#D0E29F&#34;,&#34;#E5B256&#34;,&#34;#A4997C&#34;,&#34;#DC68B4&#34;,&#34;#9A73DC&#34;,&#34;#B644E3&#34;,&#34;#DF7963&#34;,&#34;#71E46B&#34;,&#34;#DBAACD&#34;,&#34;#D3DEDC&#34;,&#34;#74E5BE&#34;,&#34;#75CADB&#34;,&#34;#D0E552&#34;,&#34;#7F99D9&#34;],&#34;fillOpacity&#34;:1},null,null,null,null,[&#34;2006&#34;,&#34;2007&#34;,&#34;2008&#34;,&#34;2009&#34;,&#34;2010&#34;,&#34;2011&#34;,&#34;2012&#34;,&#34;2013&#34;,&#34;2014&#34;,&#34;2015&#34;,&#34;2016&#34;,&#34;2017&#34;,&#34;2018&#34;,&#34;2019&#34;],{&#34;interactive&#34;:false,&#34;permanent&#34;:true,&#34;direction&#34;:&#34;bottomleft&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]}],&#34;setView&#34;:[[33.8615156227314,-96.610920222527],7,[]],&#34;limits&#34;:{&#34;lat&#34;:[32.3772710740741,35.7136810454545],&#34;lng&#34;:[-99.1936959047619,-93.8981201153846]}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;median-centers&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Median centers&lt;/h2&gt;
&lt;p&gt;Due to the intermittent recruits from California, the Northeast, and
Canada – Chuba Hubbard’s hometown, for example, lies at a whopping
53.5 degrees north – mapping the median center is a good idea as this
metric reduces the influence of outliers. This code is identical to
the previous except that it calculates medians instead of means. I
still use the mean center (plus the same minor correction mentioned
earlier) to generate the starting view so that the two are consistent.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# get median center for each year
median.centers &amp;lt;- data.frame(year = years, lon = NA, lat = NA)

for (year in years) {
  median.centers$lon[median.centers$year == year] &amp;lt;- median(recruits$lon[recruits$year == year])
  median.centers$lat[median.centers$year == year] &amp;lt;- median(recruits$lat[recruits$year == year])
}

leaflet(width = &amp;quot;100%&amp;quot;, height = &amp;quot;500px&amp;quot;) %&amp;gt;%
  addTiles() %&amp;gt;%
  setView(lng = mean(mean.centers$lon), lat = mean(mean.centers$lat)+0.4, zoom = 7) %&amp;gt;%
  addCircleMarkers(data = median.centers,
                   lng = ~lon,
                   lat = ~lat,
                   label = ~as.character(year),
                   labelOptions = labelOptions(noHide = TRUE,
                                               direction = &amp;quot;bottomleft&amp;quot;),
                   radius = 7,
                   stroke = FALSE,
                   color = ~colors(year),
                   fillOpacity = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;div style=&#34;text-align: center;&#34;&gt;
&lt;h3 id=&#34;median-centers-of-recruits-hometowns-2006---2019&#34;&gt;Median centers of recruits’ hometowns (2006 - 2019)&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&#34;htmlwidget-3&#34; style=&#34;width:100%;height:500px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-3&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;calls&#34;:[{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,null,null,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false,&#34;attribution&#34;:&#34;&amp;copy; &lt;a href=\&#34;http://openstreetmap.org\&#34;&gt;OpenStreetMap&lt;\/a&gt; contributors, &lt;a href=\&#34;http://creativecommons.org/licenses/by-sa/2.0/\&#34;&gt;CC-BY-SA&lt;\/a&gt;&#34;}]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[32.735687,32.370699,33.233184,34.423996,32.370699,32.9169305,32.748197,32.650444,32.279398,32.611925,34.9786885,33.253448,33.06285,33.4059485],[-95.895889,-96.497182,-96.865969,-95.526993,-95.309789,-96.598034,-96.578387,-96.906485,-95.700024,-96.865969,-96.8100915,-97.096016,-96.45971,-97.0810995],7,null,null,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:[&#34;#D0E29F&#34;,&#34;#E5B256&#34;,&#34;#A4997C&#34;,&#34;#DC68B4&#34;,&#34;#9A73DC&#34;,&#34;#B644E3&#34;,&#34;#DF7963&#34;,&#34;#71E46B&#34;,&#34;#DBAACD&#34;,&#34;#D3DEDC&#34;,&#34;#74E5BE&#34;,&#34;#75CADB&#34;,&#34;#D0E552&#34;,&#34;#7F99D9&#34;],&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:[&#34;#D0E29F&#34;,&#34;#E5B256&#34;,&#34;#A4997C&#34;,&#34;#DC68B4&#34;,&#34;#9A73DC&#34;,&#34;#B644E3&#34;,&#34;#DF7963&#34;,&#34;#71E46B&#34;,&#34;#DBAACD&#34;,&#34;#D3DEDC&#34;,&#34;#74E5BE&#34;,&#34;#75CADB&#34;,&#34;#D0E552&#34;,&#34;#7F99D9&#34;],&#34;fillOpacity&#34;:1},null,null,null,null,[&#34;2006&#34;,&#34;2007&#34;,&#34;2008&#34;,&#34;2009&#34;,&#34;2010&#34;,&#34;2011&#34;,&#34;2012&#34;,&#34;2013&#34;,&#34;2014&#34;,&#34;2015&#34;,&#34;2016&#34;,&#34;2017&#34;,&#34;2018&#34;,&#34;2019&#34;],{&#34;interactive&#34;:false,&#34;permanent&#34;:true,&#34;direction&#34;:&#34;bottomleft&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]}],&#34;setView&#34;:[[33.8615156227314,-96.610920222527],7,[]],&#34;limits&#34;:{&#34;lat&#34;:[32.279398,34.9786885],&#34;lng&#34;:[-97.096016,-95.309789]}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;dispersion&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Dispersion&lt;/h2&gt;
&lt;p&gt;Using the median significantly reduces the amount of east-west variability and
makes 2009 and 2016 stand out from the other years. However, this approach does
not consider dispersion. If Oklahoma State received all of its recruits from
Dallas during one year and zero recruits from Dallas during another year, the
two &lt;em&gt;could&lt;/em&gt; still have the exact same mean or median center. I compare standard
deviation of distance from Stillwater by year in a later chart, but I thought it
would be useful to visualize dispersion by creating lines from Stillwater to
every recruits’ hometown.&lt;/p&gt;
&lt;p&gt;This process also requires some different libraries, particularly for creating
lines (e.g., the &lt;code&gt;st_cast&lt;/code&gt; function from &lt;code&gt;sf&lt;/code&gt;) and converting units
(&lt;code&gt;udunits2&lt;/code&gt;). Advantageously, this approach displays both distance and direction
from Stillwater. It should be noted that the &lt;code&gt;sf&lt;/code&gt; library utilizes geodetic
distance by default when a geographic coordinate system is used.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;  library(sp)
  library(sf)
  library(udunits2)

  multipoints &amp;lt;- st_multipoint(as.matrix(recruits[,c(&amp;quot;lon&amp;quot;, &amp;quot;lat&amp;quot;)]))
  points &amp;lt;- st_cast(st_geometry(multipoints), &amp;quot;POINT&amp;quot;)

  # create point for just stillwater
  stillwater &amp;lt;- st_geometry(st_point(c(-97.0665, 36.1257)))
  st_crs(stillwater)  &amp;lt;- &amp;quot;+init=epsg:4326&amp;quot;


  for (k in years) {
    multipoints &amp;lt;- st_multipoint(as.matrix(recruits[,c(&amp;quot;lon&amp;quot;, &amp;quot;lat&amp;quot;)][recruits$year == k,]))
    points &amp;lt;- st_cast(st_geometry(multipoints), &amp;quot;POINT&amp;quot;)
    st_crs(points)  &amp;lt;- &amp;quot;+init=epsg:4326&amp;quot;

    for (i in 1:length(points)) {
      # combine each point with stillwater to make a pair of points
      pair &amp;lt;- st_combine(c(points[i], stillwater))
      dist &amp;lt;- st_distance(points[i], stillwater) %&amp;gt;%
        # convert from meters to miles
        ud.convert(., &amp;quot;m&amp;quot;, &amp;quot;mi&amp;quot;)

      # create a line from this pair of points
      line &amp;lt;- st_cast(pair, &amp;quot;LINESTRING&amp;quot;)

      # combine lines into multilinestring for plotting and combine distances
      # together for computations
      if (i == 1) {
        lines &amp;lt;- line
        distances &amp;lt;- dist
      } else {
        lines &amp;lt;- st_combine(c(lines, line))
        distances &amp;lt;- append(distances, dist)
      }
    }

    ### distances ###
    # append to dataframe
    if (k == min(years)) {
      dist.df &amp;lt;- data.frame(distance = as.numeric(distances), year = k)
    } else {
      tmp.df &amp;lt;- data.frame(distance = as.numeric(distances), year = k)
      dist.df &amp;lt;- rbind(dist.df, tmp.df)
    }

    ### lines ###
    # covert to sp object
    lines.sldf &amp;lt;- sf:::as_Spatial(lines)

    # assign year to column
    lines.sldf$year &amp;lt;- k

    if (k == min(years)) {
      lines.all &amp;lt;- lines.sldf
    } else {
      lines.all &amp;lt;- rbind(lines.all, lines.sldf)
    }
  }

  # load color scheme
  colors &amp;lt;- readRDS(&amp;quot;colors.Rda&amp;quot;)

  # set up plot space
  par(mfrow=c(5,3))
  par(mar = c(2,2,2,2))

  # plot lines, each on a separate space
  for (i in 1:length(lines.all$year)) {
    plot(lines.all[lines.all$year == lines.all$year[i],],
         col = colors[i])
         #xlim = c(bbox(lines.all)[1],bbox(lines.all)[2]), # this looks really weird
         #ylim = c(bbox(lines.all)[3],bbox(lines.all)[4]))
    title(years[i])
  }&lt;/code&gt;&lt;/pre&gt;
&lt;div style=&#34;text-align: center;&#34;&gt;
&lt;h3 id=&#34;distance-and-direction-of-recruits-hometowns-to-stillwater&#34;&gt;Distance and direction of recruits’ hometowns to Stillwater&lt;/h3&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;https://mhaffner.github.io/post/osu-fb-recruiting-tech_files/figure-html/unnamed-chunk-21-1.png&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;One problem incurred here is that the scale is not consistent from plot to plot.
This makes it look as though the distance from Stillwater is low in 2014, when
in reality its standard deviation is low but its median distance from Stillwater
is &lt;em&gt;the greatest in the entire set&lt;/em&gt;. Due to this, I think it’s useful to
visualize mean distance, median distance, and standard deviation on a line graph
as well. There were some weird formatting issues with the image, so I saved it
as a .png instead of rendering it within the .Rmd directly.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# create vectors of means, medians, and standard deviation by year
mean.dist &amp;lt;- tapply(dist.df$distance, dist.df$year, mean)
median.dist &amp;lt;- tapply(dist.df$distance, dist.df$year, median)
sd.dist &amp;lt;- tapply(dist.df$distance, dist.df$year, sd)

# create data frame of these three vectors
summary.df &amp;lt;- data.frame(mean = mean.dist,
                         median = median.dist,
                         sd = sd.dist)

png(&amp;quot;../img/summary.png&amp;quot;,
    width = 800,
    height = 800,
    units = &amp;quot;px&amp;quot;,
    res = 110)
plot.new()
par(mfrow=c(3,1))
par(mar = c(4,4,4,4))

# plot for mean
plot(summary.df$mean,
     type = &amp;quot;l&amp;quot;,
     xlab = &amp;quot;&amp;quot;,
     ylab = &amp;quot;Distance (miles)&amp;quot;,
     xaxt = &amp;quot;n&amp;quot;, # remove xaxis labels; add them in the next line
     xaxs = &amp;quot;i&amp;quot;) # remove excess space in the plot
title(&amp;quot;Mean distance from Stillwater&amp;quot;)
labs &amp;lt;- years
axis(side=1, labels=labs, at=c(1:length(years)))

# plot for median
plot(summary.df$median,
     type = &amp;quot;l&amp;quot;,
     xlab = &amp;quot;&amp;quot;,
     ylab = &amp;quot;Distance (miles)&amp;quot;,
     xaxt = &amp;quot;n&amp;quot;, # remove xaxis labels; add them in the next line
     xaxs = &amp;quot;i&amp;quot;) # remove excess space in the plot
title(&amp;quot;Median distance from Stillwater&amp;quot;)
labs &amp;lt;- years
axis(side=1, labels=labs, at=c(1:length(years)))

# plot for standard deviation
plot(summary.df$sd,
     type = &amp;quot;l&amp;quot;,
     xlab = &amp;quot;&amp;quot;,
     ylab = &amp;quot;Distance (miles)&amp;quot;,
     xaxt = &amp;quot;n&amp;quot;, # remove xaxis labels; add them in the next line
     xaxs = &amp;quot;i&amp;quot;) # remove excess space in the plot
title(&amp;quot;Standard deviation of distance from Stillwater&amp;quot;)
labs &amp;lt;- years
axis(side=1, labels=labs, at=c(1:length(years)))
dev.off()&lt;/code&gt;&lt;/pre&gt;
&lt;div style=&#34;text-align: center;&#34;&gt;
&lt;h3 id=&#34;mean-median-and-standard-deviation-of-recruits-distance-from-stillwater&#34;&gt;Mean, median, and standard deviation of recruits’ distance from Stillwater&lt;/h3&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;https://gitlab.com/mhaffner/okstate-fb-recruiting/raw/master/img/summary.png&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;From these, it’s difficult to see any meaningful trend in the data.
While 14 years as a head coach is a long time in the world of NCAA
football, from a statistical perspective it’s not a large sample size.
It would be nice to examine trends with more data from the past, but
Rivals only reaches back to 2002.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Pi-hole troubleshooting: An overview of my recent installation</title>
      <link>https://mhaffner.github.io/post/pi-hole-troubleshooting/</link>
      <pubDate>Thu, 10 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://mhaffner.github.io/post/pi-hole-troubleshooting/</guid>
      <description>

&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;My first Pi-hole installation was a pain mostly due to self-inflicted
issues. That said there are a few disjointed steps, and my lack of
networking knowledge will necessitate a future reference to more a
in-depth guide than what&amp;rsquo;s currently available. This post serves as
self-documentation on what went wrong so that I (or others) can avoid
problems in future installations.&lt;/p&gt;

&lt;h1 id=&#34;network-issues&#34;&gt;Network issues&lt;/h1&gt;

&lt;p&gt;After initial installation, I could not access the Pi-hole admin page
nor the internet. Soon after, I couldn&amp;rsquo;t access wifi on any of my
devices. I&amp;rsquo;m not 100% sure what the problem was, but I have a hunch -
After installation I needed to access my router&amp;rsquo;s configuration page,
but I couldn&amp;rsquo;t remember how. This has happened before, and I just
needed to figure out my router&amp;rsquo;s brand and Google &amp;ldquo;Access router
configuration for &amp;lt;brand&amp;gt;&amp;rdquo;. When I did this, I think I may have hit
the wifi button on router (it doesn&amp;rsquo;t help that my modem sits atop my
router) and unknowingly &lt;strong&gt;turned the wifi off manually&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;After a couple hours of troubleshooting, I uninstalled Pi-hole only to
later discover that that the wifi button on the router had been
switched off. However, I still could not access the internet on my Pi!
Here is what ended up enabling me to connect to the internet again:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;From this &lt;a href=&#34;https://www.raspberrypi.org/forums/viewtopic.php?t=158142&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;, I
put the following in &lt;code&gt;/etc/network/interfaces&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-config&#34; data-lang=&#34;config&#34;&gt;    auto lo
    iface lo inet loopback
    
    auto eth0
    iface eth0 inet manual
    
    allow-hotplug wlan0
    iface wlan0 inet manual
        wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf
    
    allow-hotplug wlan1
    iface wlan1 inet manual
        wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;And from this
&lt;a href=&#34;https://www.raspberrypi.org/forums/viewtopic.php?t=158142&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;, I put the
following in &lt;code&gt;/etc/dhcpcd.conf&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-config&#34; data-lang=&#34;config&#34;&gt;    # A sample configuration for dhcpcd.
    # See dhcpcd.conf(5) for details.
    
    # Allow users of this group to interact with dhcpcd via the control socket.
    #controlgroup wheel
    
    # Inform the DHCP server of our hostname for DDNS.
    hostname
    
    # Use the hardware address of the interface for the Client ID.
    clientid&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Through the Pi-hole installation a bunch of options were inserted into
&lt;code&gt;/etc/dhcpcd.conf&lt;/code&gt;, and I think this was the root of the issue (of not
being able to connect to the internet).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;After this I ran&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;sudo ifdown wlan0
sudo ifup wlan0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and I was able to connect to the web again.&lt;/p&gt;

&lt;p&gt;Yet, my re-install of Pi-hole failed, and I found a working solution
through an &lt;a href=&#34;https://github.com/pi-hole/pi-hole/issues/1919&#34; target=&#34;_blank&#34;&gt;issue on GitHub&lt;/a&gt;. I uninstalled a few things with&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;    sudo apt-get remove lighttpd dnsmasq dnsmasq-base&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and removed &lt;code&gt;/etc/pihole/&lt;/code&gt;, &lt;code&gt;/etc/.pihole&lt;/code&gt;, and &lt;code&gt;/var/www/html/admin&lt;/code&gt;.
I then re-installed Pi-hole successfully and confirmed that I could
still access wifi (both from my Pi and from other devices).&lt;/p&gt;

&lt;h1 id=&#34;post-installation&#34;&gt;Post installation&lt;/h1&gt;

&lt;p&gt;Next, I followed &lt;a href=&#34;https://discourse.pi-hole.net/t/how-do-i-configure-my-devices-to-use-pi-hole-as-their-dns-server/245&#34; target=&#34;_blank&#34;&gt;Step 3&lt;/a&gt; from the official guide titled &amp;ldquo;How do I
configure my devices to use Pi-hole as their DNS server?&amp;ldquo;, but my
DHCP/DNS settings look quite different from the guide. I have a
Netgear router, and from its configuration page I had to make changes
in two locations.&lt;/p&gt;

&lt;p&gt;Since I did not modify the default static IP address during
installation and was met with a warning about potential IP address
conflicts, I had to add an address reservation under &lt;code&gt;ADVANCED -&amp;gt; LAN
Setup&lt;/code&gt; for the Pi. In my case, this was &lt;code&gt;192.168.1.3&lt;/code&gt;. Then, I had to
change the DNS from one automatically configured by the ISP to newly
reserved IP address of the Pi. From the &amp;ldquo;Domain Name Server (DNS)
Address&amp;rdquo; heading under &lt;code&gt;ADVANCED -&amp;gt; Setup -&amp;gt; Internet Setup&lt;/code&gt;, I
checked the option titled &amp;ldquo;Use these DNS Servers&amp;rdquo; and the previously
list IP. I applied the settings, and the rest was gravy.&lt;/p&gt;

&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Once I got a grip on what was going on, Pi-hole really was easy to
install (props to the creators for a seamless process with a nice
installer). I doubt that others&amp;rsquo; problems will be as self-inflicted as
mine, but judging by the number of posts addressing Pi-hole issues on
Raspberry Pi forums and Stack Exchange, it seems like issues do arise
from time to time. Well self, see you in a year or so! You owe me
(i.e. yourself) a beer for writing this up.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Doing useful things with Emacs Lisp</title>
      <link>https://mhaffner.github.io/post/useful-emacs-lisp/</link>
      <pubDate>Sun, 25 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mhaffner.github.io/post/useful-emacs-lisp/</guid>
      <description>


&lt;p&gt;I wrote this post to demonstrate how I’m using Emacs Lisp to do some useful
things. This is post aimed at beginners and those interested (e.g., Vim users
potentially) in how Emacs can be extended to automate some simple tasks.
Advanced users will probably have more elegant (or more complete) solutions than
what I have here,&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; so with that in mind I will focus more on the
motivations, thought processes, and progressions I’ve gone through with these
functions. I also discuss some future directions and how these functions could
be improved.&lt;/p&gt;
&lt;p&gt;About a year ago I made a point to complete the built-in Emacs Lisp tutorial.
For those looking for a good place to start with Emacs Lisp, this is undoubtedly
it. It’s one of the best programming tutorials I’ve ever gone through, and I
thoroughly enjoyed it. While navigating through the tutorial, I created a .org
file with subsections for each chapter and individual code blocks for each set
of examples/exercise. I frequently go to this file to find snippets, and I often
find this more effective than Googling solutions.&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The functions below and all associated code are in my dotfile which can be found
in &lt;a href=&#34;https://github.com/mhaffner/dotfiles&#34;&gt;this repo&lt;/a&gt;. Note that I’m using
Spacemacs, hence the associated keybindings and Vim-like conventions.&lt;/p&gt;
&lt;div id=&#34;open-html-firefox&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;open-html-firefox&lt;/h1&gt;
&lt;p&gt;I created this function since I often render .org and .Rmd files into .html
files within Emacs. Then, I use the command&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:! firefox my-newly-rendered-file.html&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to open the file in a browser. Once the .html file is open, it can simply be
refreshed to reflect any changes. But, I often use Emacs as a navigation tool
(e.g., &lt;code&gt;SPC f f&lt;/code&gt;; i.e. &lt;code&gt;lazy-helm/spacemacs/helm-find-files&lt;/code&gt;) by first opening a
.org or .Rmd in Emacs, then opening the .html in a browser with a command like
the one above. This becomes tedious since most materials I create for courses
(syllabi, assignments, handouts, discussion questions, etc.) are served as .html
files, and I have to open these all the time. I could open the &lt;em&gt;.html&lt;/em&gt; file in
Emacs instead and then use&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:! firefox %&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;but the .html files created by &lt;code&gt;org-reveal&lt;/code&gt; (a very nice package) are quite
large and cause Emacs to hang. So, I sought to create something that would (a)
get the full file path to the current buffer and strip the extension, (b) slap
“.html” to the end of this string, (c) open the file in Firefox, and (d)
assign this function to a keybinding. Here is what I came up with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(defun open-html-firefox ()

  (interactive)

  ; create the new string of the file to open
  (setq file-string (concat (file-name-sans-extension (buffer-file-name)) &amp;quot;.html&amp;quot;))

  ; execute command
  (shell-command (concat &amp;quot;firefox &amp;quot; file-string)))


  ; assign this function to a keybinding in markdown mode
  (add-hook &amp;#39;markdown-mode-hook
    (lambda ()
      (local-set-key (kbd &amp;quot;C-c f&amp;quot;) &amp;#39;open-html-firefox)))

  ; assign this function to a keybinding in org mode
  (add-hook &amp;#39;org-mode-hook
            (lambda ()
              (local-set-key (kbd &amp;quot;C-c f&amp;quot;) &amp;#39;open-html-firefox)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In my dotfile, the function has documentation, but I removed it for this post
since I’m explaining everything in detail. The function itself is quite short
and consists of mainly two things: (a) creating a variable called
&lt;code&gt;file-string&lt;/code&gt;&lt;a href=&#34;#fn3&#34; class=&#34;footnote-ref&#34; id=&#34;fnref3&#34;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt; and (b) opening this string (which is an .html
file) in Firefox with a command.&lt;/p&gt;
&lt;p&gt;Originally I was using&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(setq file-string (replace-regexp-in-string &amp;quot;\.Rmd&amp;quot; &amp;quot;.html&amp;quot; (buffer-file-name)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to create the string, but this obviously only works for .Rmd files. Also, I was
not initially aware of the &lt;code&gt;file-name-sans-extension&lt;/code&gt; function which turned out
to be much easier than what I was doing anyway.&lt;/p&gt;
&lt;p&gt;The two &lt;code&gt;add-hook&lt;/code&gt;’s just assign &lt;code&gt;open-html-firefox&lt;/code&gt; to keybindings in
&lt;code&gt;markdown-mode&lt;/code&gt; and &lt;code&gt;org-mode&lt;/code&gt;. The reason why I use lambdas is because the
internet told me to;&lt;a href=&#34;#fn4&#34; class=&#34;footnote-ref&#34; id=&#34;fnref4&#34;&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt; lo and behold, it doesn’t work without lambdas.
It is possible to assign this function to a global keybinding, but I don’t want
to override keybindings on other modes. Something like &lt;code&gt;C-c f&lt;/code&gt; is common enough
that I assume it’s being used elsewhere.&lt;/p&gt;
&lt;p&gt;What would be even better (and simpler) is a function/keybinding that opens a
file under point directly from &lt;code&gt;helm-find-files&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;add-src-elements&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;add-src-elements&lt;/h1&gt;
&lt;p&gt;This function adds the text&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#+BEGIN_SRC
#+END_SRC&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the current buffer and places the cursor just after “#+BEGIN_SRC”. This block
structure is used to embed code .org files, which I use to create presentations.
For example, a block may contain something like&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#+BEGIN_SRC python
import numpy
import scipy

x = &amp;#39;Emacs Rocks&amp;#39; # i hope this phrase isn&amp;#39;t trademarked
#+END_SRC&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Manually typing &lt;code&gt;#+BEGIN_SRC...&lt;/code&gt;, etc. etc. is tedious, so I simply created a
function and keybinding to automate this. Here it is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(defun add-src-elements ()
    &amp;quot;Make adding #+BEGIN/END _SRC elements easier&amp;quot;
    (interactive)
    (insert &amp;quot;#+BEGIN_SRC\n#+END_SRC&amp;quot;)
    (forward-line -1)
    (evil-append-line 1)
    (insert &amp;quot; &amp;quot;))
    
  ; set it to a keybinding
  (with-eval-after-load &amp;#39;org
    (add-hook &amp;#39;org-mode-hook
              (lambda ()
                (local-set-key (kbd &amp;quot;C-c s&amp;quot;) &amp;#39;add-src-elements)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;My dotfile looks a little different since I have other &lt;code&gt;org-mode&lt;/code&gt; hooks, but
this is the gist of it. Again, the internet insists I use
&lt;code&gt;with-eval-after-load&lt;/code&gt;,&lt;sup&gt;4&lt;/sup&gt; so I obey. This could be improved by looking
for a previous codeblock (i.e. &lt;code&gt;search-backward&lt;/code&gt;) in the current buffer if one
exists, getting the language used for the block if it’s listed (Python in my
example), and inserting this language name just after &lt;code&gt;#+BEGIN_SRC&lt;/code&gt;. In most
presentations I only demonstrate concepts in one language, so it would make
sense to use the previous source block’s language if it is listed.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;emacs-lisp-programming-strats&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Emacs Lisp programming strats&lt;/h1&gt;
&lt;p&gt;When using Emacs Lisp, I’ve often had difficultly locating proper functions to
do simple things. For example, in my second function, &lt;code&gt;add-src-elements&lt;/code&gt;, I
utilize &lt;code&gt;(forward-line -1)&lt;/code&gt;, which serves to move the cursor to the previous
line. This is something we do all the time in text editors manually. As a
Spacemacs user, for example, I use &lt;code&gt;j&lt;/code&gt;/&lt;code&gt;k&lt;/code&gt; to navigate between single lines.
This is where a beautiful feature of Emacs is exposed: &lt;code&gt;describe-key&lt;/code&gt;, which
will show the function called by any keybinding. To find out what function is
called by &lt;code&gt;k&lt;/code&gt; (which navigates to the previous line in &lt;code&gt;evil-mode&lt;/code&gt;), I use &lt;code&gt;C-h k&lt;/code&gt; to call &lt;code&gt;describe-key&lt;/code&gt;, and then I simply press &lt;code&gt;k&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The function appearing in the help buffer is called &lt;code&gt;evil-previous-line&lt;/code&gt;. While
this wasn’t what I used directly in my custom function, this process often
points me to the function I need. Similar useful features include
&lt;code&gt;describe-function&lt;/code&gt; and &lt;code&gt;describe-variable&lt;/code&gt;. All of these &lt;code&gt;describe-&lt;/code&gt; functions
contain links to the source code, which demonstrate what’s going on under the
hood.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Footnotes&lt;/h1&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;Please do share if you have better solutions!&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;Which is baffling.&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn3&#34;&gt;&lt;p&gt;Using &lt;code&gt;let&lt;/code&gt; would probably be a better approach than &lt;code&gt;setq&lt;/code&gt;.&lt;a href=&#34;#fnref3&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn4&#34;&gt;&lt;p&gt;A Spacemacs requirement?&lt;a href=&#34;#fnref4&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>A place-based analysis of #BlackLivesMatter and counter-protest content on Twitter</title>
      <link>https://mhaffner.github.io/publication/blm-tweets/</link>
      <pubDate>Sat, 01 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mhaffner.github.io/publication/blm-tweets/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A spatial analysis of non-English Twitter activity in Houston, TX</title>
      <link>https://mhaffner.github.io/publication/non-english-tweets/</link>
      <pubDate>Mon, 05 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mhaffner.github.io/publication/non-english-tweets/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A spatial analysis of non-English Twitter activity in Houston, TX</title>
      <link>https://mhaffner.github.io/talk/non-english-tweets/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 -0600</pubDate>
      
      <guid>https://mhaffner.github.io/talk/non-english-tweets/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Location-based social media behaviors and perception: Views of university students</title>
      <link>https://mhaffner.github.io/talk/lbsm-survey/</link>
      <pubDate>Wed, 25 Oct 2017 00:00:00 -0500</pubDate>
      
      <guid>https://mhaffner.github.io/talk/lbsm-survey/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Why I switched from Ubuntu to Manjaro (Arch Linux derivative)</title>
      <link>https://mhaffner.github.io/post/arch-linux/</link>
      <pubDate>Thu, 13 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mhaffner.github.io/post/arch-linux/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;EDIT: I&amp;rsquo;ve made several modifications to the original piece based on helpful
comments from reddit users &lt;em&gt;newworkaccount&lt;/em&gt;, &lt;em&gt;iKnitYogurt&lt;/em&gt;, &lt;em&gt;jprada&lt;/em&gt;, and
&lt;em&gt;ThisTimeIllSucceed&lt;/em&gt; on the
thread
&lt;a href=&#34;https://www.reddit.com/r/ManjaroLinux/comments/6n6mao/why_i_switched_from_ubuntu_to_manjaro/&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.
View the original post in its full glory/shame
on
&lt;a href=&#34;https://github.com/mhaffner/personal-website-hugo/blob/master/content/post/arch-linux.md&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Like everyone else, when I first started using GNU/Linux I gravitated toward
Ubuntu.  While using Ubuntu, I sought to try other distributions and briefly
used Fedora, Elementary OS, and Debian. With all of these distributions &amp;ndash;
including Ubuntu &amp;ndash; I came across a very similar problem: having to manually add
software repositories to get programs that were more up-to-date than the package
manager&amp;rsquo;s defaults. With this comes the difficulty of deriving reproducible,
purely command line solutions to installing many of my staple programs. Building
packages from source is not the end of the world, but if there was a
distribution/package manager that had a workable version (for my purposes) of
all the packages I needed, wouldn&amp;rsquo;t that be worth pursuing?&lt;/p&gt;

&lt;p&gt;Enter the Arch Linux family. Since using Manjaro (technically an Arch Linux
derivative, not Arch Linux itself nor an Arch distribution; thanks to reddit
users &lt;em&gt;newworkaccount&lt;/em&gt; and &lt;em&gt;iKnitYogurt&lt;/em&gt; for clarifying this), I&amp;rsquo;m not sure I&amp;rsquo;ve
had to build anything from source manually; I&amp;rsquo;ve installed everything with a
simple one-liner with &lt;code&gt;pacman&lt;/code&gt; or &lt;code&gt;yaourt&lt;/code&gt;. For testing purposes (and for the
sake of (re)installing systems often) it&amp;rsquo;s nice to have reproducible methods of
software installation. Aside from this, Manjaro has other really nice features
rendering it indispensable. Ubuntu has some good things going for it, and for it
I do still hold some reverence as my first true GNU/Linux experience. The purple
terminal sparks an incredible amount of nostalgia every time I see it on someone
else&amp;rsquo;s system.&lt;/p&gt;

&lt;p&gt;But I can&amp;rsquo;t go back.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; &lt;em&gt;This is an opinionated piece, and there are likely some solutions
to the problems I perceive with Ubuntu. Nevertheless, Manjaro has seemed much
more straightforward to me, and at its core, I believe it&amp;rsquo;s more user-friendly.
I do not intend this piece to be authoritative; rather, it is a description of
my journey into the Arch-related world from Ubuntu (thanks to reddit user jprada
for pointing out how this could be clarified). If I&amp;rsquo;m being unfair to Ubuntu
and/or you know of solutions to my problems, I&amp;rsquo;d love to hear about it! Drop me
a comment&lt;sup&gt;1&lt;/sup&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The package manager for Manjaro (and Arch Linux) is called &lt;code&gt;pacman&lt;/code&gt;. Installing
multiple packages can be accomplished with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pacman -S package1 package2 package3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;for example. This can, of course, be replicated with &lt;code&gt;apt&lt;/code&gt; on Ubuntu with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get install package1 package2 package3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;but if you have to manually add a PPA, a key, etc., this process becomes several
lines long for each package. Multi-line solutions were common for me as I often
need bleeding edge packages, and most default package versions were not up to
date enough. This process could be automated in a script, but the keys and
repositories can change. I&amp;rsquo;ve never had to add a repository manually with
Manjaro since software in the community repositories (installed with &lt;code&gt;yaourt&lt;/code&gt;)
have everything I need that the official repositories lack. Beyond this,
removing packages seems to be much easier with &lt;code&gt;pacman&lt;/code&gt; through&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pacman -R package
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Reddit user &lt;em&gt;ThisTimeIllSucceed&lt;/em&gt; actually suggests using&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pacman -Rns package
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;which removes any dependencies not used by another package and any config files
for the package. On the other hand, &lt;code&gt;apt&lt;/code&gt; uses a combination of &lt;code&gt;purge&lt;/code&gt; and
&lt;code&gt;remove&lt;/code&gt;. I&amp;rsquo;m not really sure which comes first or why, and I&amp;rsquo;m not really sure
what these commands fundamentally do. I&amp;rsquo;ve so often received errors with
&lt;code&gt;apt-get update&lt;/code&gt; after removing packages that I&amp;rsquo;m left wondering if I&amp;rsquo;ve ever
used these commands correctly.&lt;/p&gt;

&lt;p&gt;Certainly the argument in favor of Ubuntu (and against Arch Linux-like
derivatives) is that packages are more stable. This is probably true on a
package-to-package basis, but I&amp;rsquo;ve had much more difficulty keeping the OS
stable &lt;em&gt;as a whole&lt;/em&gt; with Ubuntu than with Manjaro. A large part of this has to
do with distribution upgrades, which have been a pain for me on Ubuntu but
&lt;strong&gt;don&amp;rsquo;t exist&lt;/strong&gt; in Manjaro, which operates on a rolling release. Using the
command &lt;code&gt;pacman -Syu&lt;/code&gt; upgrades all on packages on the system, meaning that you
have the most up-to-date version of the OS once you upgrade packages.&lt;/p&gt;

&lt;p&gt;This feature in Manjaro (or the lack thereof in Ubuntu) was the ultimate tipping
point for me. A few months ago my graphics card died, so I bought a new one, an
AMD RX 470. I could not &lt;em&gt;for the life of me&lt;/em&gt; get it working in Ubuntu 14. After
doing some research (after I bought the card, of course), I discovered that AMD
cards don&amp;rsquo;t always work well with GNU/Linux. After trying a plethora of options,
I decided that upgrading from 14 to 16 might be my best shot. Aside from not
solving my graphics card issue, this upgrade resulted in a whole host of
packages not working correctly&lt;sup&gt;2&lt;/sup&gt;. At this point I decided to try
various Arch Linux derivatives, which have a reputation of working with a wide
range of (and often newest) hardware.&lt;/p&gt;

&lt;p&gt;There are plenty of other Arch Linux derivatives including Antergos, Apricity,
and ArchBang. Pure Arch Linux is a bit too stripped down for my liking; Manjaro
seems like a good balance between a simple, highly configurable system and one
that allows you to hit the ground running.&lt;/p&gt;

&lt;p&gt;Over time, I&amp;rsquo;ve come to the conclusion that no GNU/Linux distribution is
perfect. I still have issues with Manjaro from time to time (explained at the
conclusion of the piece), and recently I was wondering if I really gave Ubuntu a
fair shot. Did I exhaust all possible solutions in getting the RX 470 to work?
Is there a easier method to installing packages that I&amp;rsquo;m just missing? And is
&lt;code&gt;apt&lt;/code&gt; really as cryptic as I&amp;rsquo;m making it out to be? A recent adventure has
confirmed some of these suspicions.&lt;/p&gt;

&lt;p&gt;In April I released a suite of tools called &lt;code&gt;shp2nosql&lt;/code&gt; (I wrote about
it &lt;a href=&#34;https://mhaffner.github.io/post/shp2nosql&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; and it&amp;rsquo;s on
GitHub &lt;a href=&#34;https://github.com/mhaffner/shp2nosql&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;). In a nutshell, it&amp;rsquo;s
designed to insert spatial data into NoSQL systems. I conducted all of my
initial testing on local machines running Manjaro. Before pushing the code to a
public repository on GitHub, I decided to do some testing on other GNU/Linux
distributions to ensure portability. I started with a clean instance of Ubuntu
16 in a virtual machine and installed software from the ground up. Below is the
code I used to install dependencies:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# install dependencies
sudo apt-get update
sudo apt-get install python-software-properties
sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable
sudo add-apt-repository ppa:webupd8team/java # for java
sudo apt-get update
sudo apt-get install git gdal-bin curl oracle-java8-installer vim
cd ~
git clone https://github.com/mhaffner/shp2nosql ~/git-repos/shp2nosql
export PATH=$PATH:~/git-repos/shp2nosql/bin

# install and start elasticsearch
wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
sudo apt-get install apt-transport-https
echo &amp;quot;deb https://artifacts.elastic.co/packages/5.x/apt stable main&amp;quot; | sudo tee -a /etc/apt/sources.list.d/elastic-5.x.list
sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install elasticsearch
## edit /etc/elasticsearch.yml and uncomment cluster.name, node.name, and network.host to 0.0.0.0
sudo systemctl enable elasticsearch.service
sudo systemctl start elasticsearch

# install and start mongodb
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927
echo &amp;quot;deb http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.2 multiverse&amp;quot; | sudo tee /etc/apt/sources.list.d/mongodb-org-3.2.list
sudo apt-get update
sudo apt-get install -y mongodb-org
sudo cp ~/git-repos/shp2nosql/development/ubuntu-16.04/mongodb.service /etc/systemd/system/mongodb.service
sudo systemctl start mongodb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What a challenge! I also had to manually alter &lt;code&gt;elasticsearch.yml&lt;/code&gt; and
&lt;code&gt;mongodb.service&lt;/code&gt; (and then save these configs for future testing) because the
default configurations were not sufficient. Compare the above code to what I
needed in Manjaro:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo pacman -Syu elasticsearch mongodb wget gdal vim
sudo systemctl enable elasticsearch.service
sudo systemctl start elasticsearch
sudo systemctl start mongodb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Way easier. And I did not have to manually alter config files.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Random rambling&lt;/strong&gt;: &lt;em&gt;Some of difference in installation of dependencies is due
to the suite of pre-packaged software that comes with Manjaro; it comes with
&lt;code&gt;curl&lt;/code&gt; and &lt;code&gt;java&lt;/code&gt; whereas Ubuntu does not. The inclusion of these extra packages
is an example of how Manjaro deviates from the pure Arch Linux philosophy, which
generally takes a DIY approach - The developers seek to create an non-bloated
experience, avoiding design decisions that force users down a specific path.
(This is not to suggest that Ubuntu would be expected to contain everything that
Arch Linux contains, of course). However, if Manjaro developers make (a) mostly
good design decisions, (b) that I can change if I want, &amp;copy; that help me get a
system up and running much faster than I could with a bare bones installation&amp;hellip;
then I&amp;rsquo;m okay with this&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s possible that users of other Arch Linux derivatives would need something
slightly different to install dependencies for &lt;code&gt;shp2nosql&lt;/code&gt;, but the general
point still stands: many one liners with &lt;code&gt;pacman&lt;/code&gt; are analogous to multi-step
processes with &lt;code&gt;apt&lt;/code&gt;. This includes the installation of &lt;code&gt;QGIS&lt;/code&gt;, &lt;code&gt;R&lt;/code&gt;, and
&lt;code&gt;Emacs&lt;/code&gt; - all of which are staple programs for me.&lt;/p&gt;

&lt;p&gt;With the confusion I&amp;rsquo;ve endured with Ubuntu, I simply can&amp;rsquo;t recommend it
anymore, especially to new users. In this piece I focused mostly on package
installation, but there are other notable features of Manjaro (and other
Arch-based distributions) that are worth mentioning here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: the Arch Wiki is incredible, much of it applies to Manjaro,
and 95%+ of my questions are answered here. I definitely cannot say the same
for Ubuntu.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Kernel installation&lt;/strong&gt;: Installing and removing kernels is trivial through
the System Settings Module (this ended up being part of the solution to using
my new GPU).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Greater privacy/freedom&lt;/strong&gt;: Many Ubuntu users may not even realize that their OS
contains
&lt;a href=&#34;https://arstechnica.com/information-technology/2012/12/richard-stallman-calls-ubuntu-spyware-because-it-tracks-searches/&#34; target=&#34;_blank&#34;&gt;&amp;ldquo;surveillance code&amp;rdquo;&lt;/a&gt;.
Searches in dashboard are transmitted to Canonical, and the company profits
when a user buys a product from Amazon using the Amazon App.&lt;sup&gt;3,4,5&lt;/sup&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Less bloated-ness&lt;/strong&gt;: Manjaro (which is certainly more bloated than pure
Arch) feels much less bloated than Ubuntu. It has no Software Center, for
instance, and feels snappier. Knowing that Canonical transmits search data
might explain some of this new found snappiness&amp;hellip;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Other various things &lt;em&gt;just work&lt;/em&gt;&lt;/strong&gt;: For a while, my test of a well-working
GNU/Linux distribution was one with which I could install the &lt;code&gt;NSM3&lt;/code&gt; library
in &lt;code&gt;R&lt;/code&gt;. This sounds ridiculous, of course, but I could never successfully
install the library in Ubuntu or Fedora after many painstaking hours.
Installation of &lt;code&gt;NSM3&lt;/code&gt; was insignificant in Manjaro; it worked on the first
try. I&amp;rsquo;ve played games on Manjaro - Hearthstone&lt;sup&gt;6&lt;/sup&gt;, World of
Warcraft, Faster than Light - that all basically work out of the box. These
took much more additional configuration in Ubuntu.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;some-of-the-problems-i-still-find-with-manjaro&#34;&gt;Some of the problems I still find with Manjaro&lt;/h1&gt;

&lt;p&gt;As previously noted, I still haven&amp;rsquo;t found the perfect GNU/Linux distribution.
Here are problems I still find with Manjaro:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Managing my desktop settings.&lt;/strong&gt; I can&amp;rsquo;t stand point and click menus knowing
that I have to make changes manually across all of systems if I want
consistency. I want my desktop settings (keybindings, background, etc.)
version controlled through a single config file, just like my &lt;code&gt;.spacemacs&lt;/code&gt; and
&lt;code&gt;.vimrc&lt;/code&gt;. I&amp;rsquo;ve heard that i3 is a solution to this, but I don&amp;rsquo;t think I want a
tiling window manager. I like to stack windows on top of one another and
switch as I need. I really like my current Manjaro KDE setup, but it uses many
different config files that seem to change arbitrarily, so VC is a pain. Some
other simple DE could work for me, but I desperately need a launcher so that I
can easily start programs with &lt;code&gt;Super&lt;/code&gt; + &lt;code&gt;&amp;lt;program name&amp;gt;&lt;/code&gt; (which, from my
experience, is not available on LXDE, LXQT, and XFCE).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Integration of &lt;code&gt;pacman&lt;/code&gt; and &lt;code&gt;yaourt&lt;/code&gt; package management&lt;/strong&gt;: Upgrading
packages with &lt;code&gt;pacman&lt;/code&gt; is easy, but &lt;code&gt;yaourt&lt;/code&gt; is more difficult. Is it possible
to integrate these (i.e. install with &lt;code&gt;yaourt&lt;/code&gt; but upgrade with &lt;code&gt;pacman&lt;/code&gt;)?&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Breakage of &lt;code&gt;yaourt&lt;/code&gt; packages&lt;/strong&gt;: This only happened to me once, but it was
pretty crippling. After a system update with &lt;code&gt;pacman&lt;/code&gt;, QGIS (installed via
&lt;code&gt;yaourt&lt;/code&gt;) broke. A forum user came up with a combination of downgrades that
got QGIS working, but downgrades are not officially supported, and I couldn&amp;rsquo;t
upgrade &lt;code&gt;pacman&lt;/code&gt; packages after this downgrade.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt; This way, all thrashings of the piece are logged in one place, and
I don&amp;rsquo;t have to stumble upon them individually on Hacker News, various Reddit
pages, Twitter, and other sites!&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;2&lt;/sup&gt; To be fair, Ubuntu does throw a very Windows-esque warning stating
the upgrade my ruin your entire system.&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;3&lt;/sup&gt; This was true as of December 2012 but is probably still happening.&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;4&lt;/sup&gt; This privacy violation is nothing compared to what Microsoft,
Apple, and other companies are probably doing.&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;5&lt;/sup&gt; While more &amp;ldquo;libre&amp;rdquo; than Ubuntu, Arch Linux does not receive gold
stars from The Free Software Foundation&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;6&lt;/sup&gt; I occasionally have issues with my GPU on Windows still. For a time
I was playing Hearthstone through Wine on Manjaro (an unsupported OS) while
could not play at all on Windows as the game would always unexpectedly crash.
It was laughable to me that I could play the game better on an unsupported OS
than on Windows.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Location based social media behavior and perception: Views of university students</title>
      <link>https://mhaffner.github.io/publication/lbsm-survey/</link>
      <pubDate>Thu, 18 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mhaffner.github.io/publication/lbsm-survey/</guid>
      <description></description>
    </item>
    
    <item>
      <title>GIS-based modeling of tornado siren sound propagation: Refining spatial extent and coverage estimations</title>
      <link>https://mhaffner.github.io/publication/tornado-sirens/</link>
      <pubDate>Wed, 17 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mhaffner.github.io/publication/tornado-sirens/</guid>
      <description></description>
    </item>
    
    <item>
      <title>The development of shp2nosql</title>
      <link>https://mhaffner.github.io/post/shp2nosql/</link>
      <pubDate>Wed, 12 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mhaffner.github.io/post/shp2nosql/</guid>
      <description>&lt;p&gt;In the early days of my dissertation, I was collecting Twitter data but had no
idea how to store, manage, or query these data. First, I tried PostgreSQL with
PostGIS. I had been wanting to learn PostGIS anyway, not to mention a suitable
alternative to MS SQL Server. After learning PostGIS&amp;rsquo;s intricacies, I soon found
it was unsuitable for my needs. After some searching, I stumbled upon MongoDB.&lt;/p&gt;

&lt;p&gt;Subsequently, I started using MongoDB to handle my data. Working with MongoDB
requires at least &lt;em&gt;some&lt;/em&gt; knowledge of JavaScript, which I was wanting to learn
anyway, so I didn&amp;rsquo;t mind this switch. This worked somewhat better than
PostgreSQL since MongoDB is good at handling semi-structured data (like those
from Twitter), but sharding was not intuitive, inserting spatial data was
difficult, and queries were still slow. At the &lt;em&gt;CyberGIS and GeoSpatial Data
Science&lt;/em&gt; conference/workshop at the University of Illinois in the summer of
2016, I was introduced to Elasticsearch.&lt;/p&gt;

&lt;p&gt;So I started using Elasticsearch to handle my data. After many painstaking
attempts to index geographic data in Elasticsearch, I was becoming concerned
that I&amp;rsquo;d spend the next several years trying a never-ending list of databases,
learning new skills, drowning in the digital sea&amp;hellip;.. and never complete my
dissertation. Thankfully, with the help
of
&lt;a href=&#34;https://www.gitbook.com/book/mapbutcher/using-spatial-data-in-elasticsearch/details&#34; target=&#34;_blank&#34;&gt;MapButcher&amp;rsquo;s tutorial&lt;/a&gt;,
I was finally able to index my data and perform spatial queries in a reasonable
amount of time.&lt;/p&gt;

&lt;p&gt;My search for a suitable database stopped after three. This process was
incredibly valuable in that I learned many new skills and created some useful
tools for myself, but ten months had elapsed before I found a suitable workflow.
I thought, &lt;em&gt;What about researchers who don&amp;rsquo;t have ten months to spare learning
the intricacies of multiple databases&lt;/em&gt;? I now had three different workflows for
working with spatially enabled databases, but each was somewhat clunky. Since I
knew I&amp;rsquo;d be working with Elasticsearch for quite some time, it was in my best
interest to create something more efficient. If I could make a generalizable
tool, others could benefit from it and avoid some of the mishaps I encountered
along the way. Combine these elements with my need to present something at the
&lt;em&gt;AAG Annual Meeting&lt;/em&gt; (and save dissertation article presentations for later),
and the stars had wonderfully aligned. I decided to create a software tool to
aid geographers in inserting/indexing spatial data.&lt;/p&gt;

&lt;p&gt;There really was no need to create a &lt;em&gt;shapefile to PostGIS&lt;/em&gt; tool, since it
already exists: &lt;code&gt;shp2pgsql&lt;/code&gt;. What I needed (and sought to create) was the NoSQL
equivalent, which I call &lt;code&gt;shp2nosql&lt;/code&gt;. Currently it works with Elaticsearch and
MongoDB, but I&amp;rsquo;d love others to contribute and make the tool more robust,
suggest new features, and possibly support more databases. Technical details can
be found on my GitHub page &lt;a href=&#34;https://github.com/mhaffner/shp2nosql&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;, and
the presentation I delivered at the AAG Annual Meeting can be
found &lt;a href=&#34;https://mhaffner.github.io/presentations/shp2nosql.html&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Burnination of the Wordpress</title>
      <link>https://mhaffner.github.io/post/first-post/</link>
      <pubDate>Thu, 30 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mhaffner.github.io/post/first-post/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;m currently in the process of moving my blog to GitHub pages. I&amp;rsquo;m
doing this for several reasons:&lt;/p&gt;

&lt;h1 id=&#34;1-ease-of-creating-publishing-posts&#34;&gt;(1) Ease of creating/publishing posts&lt;/h1&gt;

&lt;p&gt;On my first few Wordpress posts I typed content directly in Wordpress.
I didn&amp;rsquo;t mind this at the time, but eventually I started using Emacs
&lt;code&gt;org-mode&lt;/code&gt; for all writing, including research papers, blog posts,
etc. After a semi-debacle of copying an html-exported &lt;code&gt;org&lt;/code&gt; file into
Wordpress, I never posted again. This manual labor approach did not
appeal to me. I discovered that I could host a blog through GitHub
pages and simply push a &lt;code&gt;.md&lt;/code&gt; file to a repository (much like I was
already doing with code repositories) to create a post. This is much,
much easier than what I was doing with Wordpress before. I&amp;rsquo;m still in
the process of figuring out how to use &lt;code&gt;org-mode&lt;/code&gt; on here, but I&amp;rsquo;ll be
there soon :)&lt;/p&gt;

&lt;h1 id=&#34;2-version-control&#34;&gt;(2) Version control&lt;/h1&gt;

&lt;p&gt;I have the unfortunate habit of nuking everying I do pretty regularly,
and git makes me forgive myself exceedingly quicker than before.&lt;/p&gt;

&lt;h1 id=&#34;3-less-corporate-control-profit-whatever&#34;&gt;(3) Less corporate control/profit/whatever&lt;/h1&gt;

&lt;p&gt;No more ads. More control for me. No longer do I get sick when I inadvertently
see options to &lt;em&gt;pay&lt;/em&gt; for Wordpress themes thinking about all the innocent people
who have willingly done this (now that I know about Jekyll). &lt;strong&gt;EDIT&lt;/strong&gt;: So I
found out that there are plenty of Jekyll themes you can pay for too. But I can
still avoid seeing this easier on GitHub pages. And I have more control this way.&lt;/p&gt;

&lt;h1 id=&#34;4-easier-to-reflect-changes-to-my-cv&#34;&gt;(4) Easier to reflect changes to my CV&lt;/h1&gt;

&lt;p&gt;Nothing wrong with a little self-promotion on a personal blog, right? With
Wordpress I had to upload my new CV through the web interface &lt;em&gt;every time&lt;/em&gt; I
made a change (which is quite often). I&amp;rsquo;m still working on this, but I plan on
creating a symbolic link from my CV repository here, so all I&amp;rsquo;ll have to do is
push the changes to this repository when I update my CV.
&lt;strong&gt;EDIT&lt;/strong&gt;: I&amp;rsquo;m now doing this with hard links. Setting it up was pretty easy.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The development of shp2nosql: Command line tools for spatial data and NoSQL databases</title>
      <link>https://mhaffner.github.io/talk/shp2nosql/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 -0600</pubDate>
      
      <guid>https://mhaffner.github.io/talk/shp2nosql/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
